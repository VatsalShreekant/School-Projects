LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.STD_LOGIC_UNSIGNED.ALL;
USE ieee.NUMERIC_STD.ALL;

ENTITY ALU IS
	PORT( Clock : in STD_LOGIC;
			A,B : in unsigned (7 downto 0);
			student_id : in unsigned (3 downto 0);
			OP : in unsigned (15 downto 0);
			Neg: out STD_LOGIC;
			R1: OUT unsigned (3 downto 0);
			R2: OUT unsigned (3 downto 0));
END ALU;  

ARCHITECTURE calculation OF ALU IS 
Signal Reg1, Reg2, Result:unsigned(7 downto 0):=(others=> '0');
signal Reg4 : unsigned(7 downto 0);

BEGIN
Reg1<= A;
Reg2<=B;

	PROCESS (Clock, OP)
	BEGIN
		if(rising_edge(Clock))THEN 
			case OP is
			WHEN "0000000000000001" =>
			Result <= Reg1 + Reg2;
			Neg<='0';
			
			WHEN "0000000000000010" =>
				IF (Reg1<Reg2) THEN
					Neg<='1';
					Result<=Reg2-Reg1;
					ELSIF(Reg1>Reg2) THEN
					Neg<='0';
					Result<=Reg1-Reg2;
				END IF;
			
			WHEN "0000000000000100" =>
			Result<= NOT(Reg1);
			Neg<='0';
			
			WHEN "0000000000001000" =>
			Result<= NOT(Reg1 AND Reg2);
			Neg<='0';
			
			WHEN "0000000000010000" =>
			Result<= NOT(Reg1 OR Reg2);
			Neg<='0';
			
			WHEN "0000000000100000" =>
			Result <= (Reg1 AND Reg2);
			Neg<='0';
			
			WHEN "0000000100000000" => 
			Result <= (Reg1 XOR Reg2);
			Neg<='0';
			
			WHEN "0000000010000000" =>
			Result <= (Reg1 OR Reg2);
			Neg<='0';
			
			WHEN "0000000001000000"  => 
			Result <= (Reg1 XNOR Reg2);
			Neg<='0';
			
			WHEN OTHERS => 
			Result<= "--------";
		END case;
	END if;
END PROCESS;
R1<= Result(3 downto 0);
R2<= Result(7 downto 4);
END calculation;