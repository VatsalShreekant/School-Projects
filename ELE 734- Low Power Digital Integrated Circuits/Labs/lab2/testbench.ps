%!PS-Adobe-3.0
%%DocumentFonts: Helvetica Times-Roman Courier
%%Creator: Cadence Design Systems
%%EndComments
%%BeginProlog
%
% Start of Cadence ps.prologue -- Version 5.3.1
% Adobe Postscript Level 2 Color Version.
/setpacking where
{
	/currpack currentpacking def
	pop true setpacking
} if
%******************************************************************************
% Graphics initialization routine.
%
/gis  {
  0 setgray
  save
  mark
  newpath

%
% Scale postscripts 72 dpi divided by the plotter resolution set in pap.
%
  72 resolution div
  dup
  scale

%
% Move the origin of the plot up and to the right so the plotters margin
% is observed.
%
  offsetX offsetY translate

  /stippleArray 10 array def
    stippleArray
     dup    0  <FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
                FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF> put
     dup    1  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    2  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    3  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    4  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    5  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    6  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    7  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    8  <08080404020201018080404020201010
		08080404020201018080404020201010> put
            9  <08081414222241418080414122221414
                08081414222241418080414122221414> put

  /newFont 10 dict def
  newFont begin

    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
    /FontBBox [0 0 1 1] def

    /Encoding 256 array def
    0 1 255 {Encoding exch /.notdef put} for
    Encoding
      dup 48 /0  put
      dup 49 /1  put
      dup 50 /2  put
      dup 51 /3  put
      dup 52 /4  put
      dup 53 /5  put
      dup 54 /6  put
      dup 55 /7  put
      dup 56 /8  put
          57 /9  put


    /BuildChar {
        /char exch def
        /fontdict exch def
        /charname fontdict /Encoding get char get def

         1 0 setcharwidth

          16 16 true
          [16 0 0 -16 -.5 15.50]
           stippleArray char 48 sub 1 getinterval cvx
          imagemask
    } def

  end
  /StippleFont newFont definefont 66 scalefont setfont
  /fillChar 0 def

  /ellipsedict 8 dict def
  ellipsedict /mtrx matrix put

  /xformdict 8 dict def
  xformdict /xformmtrx matrix put

  /color     0 def

  /lineRed   0 def
  /lineGreen 0 def
  /lineBlue  0 def

  /fillRed   0 def
  /fillGreen 0 def
  /fillBlue  0 def

  /hatchSet  0 def

  /rht 0 def
  /rw 0 def
  /ils 1.0 def
  /textalign 1 def

} bind def

%******************************************************************************
% Paper call.  Sets resolution page height and page width.
%
/pap {
    /resolution exch def
    /pageHeight exch def
    /pageWidth exch def
    /offsetY exch def
    /offsetX exch def

  } bind def

%******************************************************************************
% Plot is done.
%
/gfs  {
    showpage
    cleartomark
    restore
  } bind def

%******************************************************************************
% Next Page sequence.
%
/nxp  {

    showpage
    newpath

%
% Scale postscripts 72 dpi divided by the plotter resolution set in pap.
%
    72 resolution div
    dup
    scale
%
% Move the origin of the plot up and to the right so the plotters margin
% is observed.
%
    offsetX offsetY translate
    /ils 1.0 def
    /textalign 1 def
  } bind def

%******************************************************************************
% Rotate Plot Sequence.
%
/rotp  {
  pageWidth 0  translate  %% This moves lower left of plot to
                          %% lower right of page.

  90 rotate    %% rotate plot 90 degs.
} bind def
%******************************************************************************
% Clipping Window
%
/clwin  {
    initclip
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    newpath
    x1 y1 moveto
    x2 y1 lineto
    x2 y2 lineto
    x1 y2 lineto
    closepath
    clip
} bind def
%******************************************************************************
% These to routines keep track of the bounding box of the shape.
% This information is used when filling the drawn shape.
%
/bblineto {
  dup dup
  /cury exch def
  miny lt {/miny exch def}
    {dup maxy gt { /maxy exch def }
           {pop } ifelse } ifelse
  dup dup
  minx lt {/minx exch def}
    {dup maxx gt { /maxx exch def }
           { pop } ifelse } ifelse
  cury lineto
} bind def

/bbmoveto {
  dup dup
  /miny exch def /maxy exch def /cury exch def
  dup dup
  /minx exch def /maxx exch def
  cury moveto
} bind def
%******************************************************************************
% Internal ellipical arc routine.
%    x y xradius yradius startangle endangle ellipse
%
/ellipse
  {
    /endangle exch def
    /startangle exch def
    /yrad exch def
    /xrad exch def
    /y exch def
    /x exch def

    startangle endangle gt {
      save
      /tmpangle startangle def
      /startangle endangle def
      /endangle tmpangle def
      restore
    } if

    ellipsedict begin
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
    end
  } bind def
%******************************************************************************
% Resident Font Scale Sequence
%    x y rfss
%
/rfss  {
    4 2 roll
    dup
    3 div
    add
    scalefont
    setfont
    0 color ne {setLineColor}
               { 0 setgray } ifelse
  } bind def
%******************************************************************************
% Resident Font End
%
%
/rfe
{
/width exch def
5 1 roll
moveto

xformdict begin
/savematrix xformmtrx currentmatrix def

exch 				% rotate mirror to mirror rotate
matrix rotate concat		% add rotation to current transform matrix
dup 1 eq
	{pop 1 -1}		% X mirror

	{2 eq
		{-1 1}		% Y mirror
		{1 1}		% No mirror
	ifelse}
ifelse matrix scale concat	% add mirror to current transform matrix


dup				% duplicate (string)
length				% replace one of the strings with its length
dup 0 ne
{
	3 -1 roll		% move fixed width flag to top of stack
	0 eq
	{			% if flag is false (0) do old string handling
		/numChr exch def
		dup stringwidth	%stack  wy,wx,(string)
		pop
		width
		exch sub	%stack  xdiff,ydiff,(string)

		cvi
		numChr idiv	%stack  xspace,ydiff,(string)

		/xoff exch def

		{		% this is the positioning  function for kshow
			pop pop
			xoff
			0
			rmoveto
		}

		exch
		kshow
	}

	{			% if flag is true (not 0) just show string
		pop show
	}
	ifelse
}

{
	pop pop pop
}
ifelse
      savematrix setmatrix
    end
  } bind def
%******************************************************************************
% Resident Font Text Alignment
%
/rfta {						% <align> rfta
	/textalign exch def
} bind def
%******************************************************************************
% Resident Font Interline Space
%
/rfis {						% <space> rfis
	/ils exch def
} bind def
%******************************************************************************
% Resident Font Scale
%
/rfsc {						% <ht> <rotate> <mirror> rfs
% What I need to do here is to validate <ht>.  <ht> can not be 0.  If it is 0
% then make it 1.  To do this I will need to use the roll operation and exch
% and maybe dup.  The algorithm looks like this:
% Roll stack to make it look like : <rotate> <mirror> <ht>
% duplicate <ht> so I can test it.
% If <ht> is equal to 0 then
% exchange 1 for <ht>
% In any case roll stack to make it look like: <ht> <rotate> <mirror>
% qed.
%
	3 -1 roll		% <rotate> <mirror> <ht>
	dup 0 eq
	{
		1 exch pop	% <rotate> <mirror> <ht=1>
	}
	if
	3 1 roll		% <ht> <rotate> <mirror>

	0 color ne
	{
		setLineColor
	}
	{
		0 setgray
	}
	ifelse

	/tasz 60 def
	/taln 59 def

	/ta tasz array def
	/cta ta def
	/tc 0 def
	/sa tasz array def
	/sc 0 def
} bind def
%******************************************************************************
% Resident Font Restricted Text
%
/rfrt {						% <height> <width> rfrt
	/rht exch def
	/rw exch def
	% Since restricting one dimension and not the other is not supported
	% if one dimension is turned off then ensure that both dimensions
	% are turned off (a value of 0 means no restriction)
	rht 0 eq rw 0 eq or
	{
		/rht 0 def
		/rw 0 def
	}
	if
} bind def
%******************************************************************************
% Resident Font Text Score
%
/rfts {						% <score> <start> <end> rfts
	sc tasz lt
	{
		3 -1 roll 3 array astore
		sa sc 3 -1 roll put
		/sc sc 1 add def
	}
	{
		pop pop pop
	} ifelse
} bind def
%******************************************************************************
% Resident Font Text
%
/rft {						% (text) rft
	tc taln gt tc tasz mod 0 eq and
	{
		cta /cta tasz array dup def put
	} if

	tc tasz mod exch cta 3 1 roll sc
	sa dup length array copy
	3 array astore put

	/sc 0 def
	/tc tc 1 add def
} bind def
%******************************************************************************
% Resident Font Complete
%
/rfc {						% <x> <y> rfc
	/cta ta def

	%
	% If text is restricted or if text alignment is not left, find the
	% longest text string
	%
	/mw 0 def
	rw 0 ne textalign 3 gt or
	{
		%
		% Find the widest text string
		%
		5 index		% <fn> <ht> <rot> <mir> <x> <y> <fn>
		setfont
		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			tasz mod cta exch get 0 get
			stringwidth pop dup mw gt
			{
				/mw exch def null
			}
			if

			pop
		}
		for

		/cta ta def
	}
	if

	%
	% Operand stack:		<fn> <ht> <rot> <mir> <x> <y>
	% Check for restricted text
	%
	rw 0 ne
	{

		%
		% Compute font scale factors
		%
		6 -2 roll pop		% <rot> <mir> <x> <y> <fn>
		rw mw div
		rht tc div dup ils mul 0.5 add cvi /tht exch def
		matrix scale makefont	% <rot> <mir> <x> <y> <fn>
		/mw rw def
	}
	{
		6 -2 roll		% <rot> <mir> <x> <y> <fn> <ht>
		dup 0 eq		% Test if height is 0
		{			% change to 1 if it is
                	1 exch pop	% <rot> <mir> <x> <y> <fn> <1>
		}
		if
		dup ils mul 0.5 add cvi /tht exch def
		dup mw mul /mw exch def scalefont
	}
	ifelse

	setfont				% <rot> <mir> <x> <y>

	moveto			% <rot> <mir>

	xformdict begin
		/savematrix xformmtrx currentmatrix def

		exch matrix rotate concat
		dup 1 eq
		{
			pop 1.0 -1.0		% x mirror
		}
		{
			2 eq
			{
				-1.0 1.0	% y mirror
			}
			{
				1.0 1.0		% no mirror
			}
			ifelse
		}
		ifelse
		matrix scale concat

		currentpoint

		%
		% Adjust origin for text alignment. For lc (4), cc (5), and uc
		% (6) move left by width / 2. For lr (7), cr (8), and ur (9)
		% move left by width. For cl (2), cc (5), and cr (8) move down
		% by height / 2. For ul (3), uc (6), and ur (9) move down by
		% height.
		%
		textalign 2 eq textalign 5 eq or textalign 8 eq or
		{
			tht tc mul 2 div sub
		} if
		textalign 3 eq textalign 6 eq or textalign 9 eq or
		{
			tht tc mul sub
		} if
		/oy exch def

		textalign 3 gt textalign 7 lt and
		{
			mw 2 div sub
		} if
		textalign 6 gt textalign 10 lt and
		{
			mw sub
		} if
		/ox exch def

		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			cta exch tasz mod get aload pop
			dup 3 -1 roll	% (str) [score] [score] <cnt>
			0 1 3 -1 roll 1 sub	% (str) [score] [score] 0 1 <cnt>
			{
				newpath ox oy moveto
				get aload pop pop exch	% ... <len> <start>
				dup 0 exch		% ... <len> <start> 0 <s
				5 index 3 1 roll	% ... (str) 0 <start>
				getinterval		% ... <len> <start> (.)
				stringwidth pop tht rmoveto
				3 index			% ... <len> <start> (str)
				3 1 roll exch		% ... (str) <start> <len>
%				dup 3 1 roll
%				sub
				getinterval stringwidth pop
				0 rlineto stroke
				dup
			}
			for
			pop pop
			ox oy moveto
			show

			%
			% Move origin for next line
			%
			/oy oy tht sub def
		}
		for

		savematrix setmatrix
	end
	pop					% throw away the "0"
} bind def
%******************************************************************************
% Draw line sequence.
%
/dls  {
  newpath
  moveto
  rlineto
  gsave
  0 color ne { setLineColor }
             { 0 setgray } ifelse
  stroke
  grestore
} bind def
%******************************************************************************
% Draw line to.
%
/dlt  {
  newpath
  gsave
  0 color ne { setLineColor }
             { 0 setgray } ifelse
  moveto
} bind def
%******************************************************************************
%
/dslt  {
  newpath
  gsave
  0 color ne { setLineColor }
             { 0 setgray } ifelse
  moveto
} bind def
%******************************************************************************
%
/dlv  {
  rlineto
} bind def
%******************************************************************************
%
/dle  {
  stroke
  grestore
} bind def
%******************************************************************************
% Move to.
/mps {
  newpath
  moveto
} bind def
%******************************************************************************
%
% Draw Box Unfilled
%    x1 y1 x2 y2 dbu
%
/dbu  {
    0 color ne { setLineColor } if
    newpath
    moveto
    dup 0 rlineto
    0 3 -1 roll
    rlineto
    neg 0 rlineto
    closepath
    stroke
  } bind def
%******************************************************************************
%
% Draw Box Filled
%    x1 y1 x2 y2 dbf
%
/dbf  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    newpath
    x1 y1 bbmoveto
    x2 y1 bblineto
    x2 y2 bblineto
    x1 y2 bblineto
    closepath
    gsave
    0 color ne { setFillColor } if
    clip fillpath grestore
  } bind def
%******************************************************************************
% Draw Box Solid
%    x1 y1 x2 y2 dsb
%
/dbs  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    newpath
    x1 y1 moveto
    x2 y1 lineto
    x2 y2 lineto
    x1 y2 lineto
    closepath
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse
    fill grestore
    0 color ne { setLineColor } if stroke
  } bind def

%******************************************************************************
% Draw Polygon Begin
%    x y dpb
%
/dpb  {
    newpath bbmoveto
  } bind def

%******************************************************************************
% Draw Polygon Unfilled
%    x y dpu
%
/dpu  {
      closepath
      gsave
      0 color ne { setLineColor } if
      stroke
      grestore
   } bind def

%******************************************************************************
% Draw Polygon Filled
%    x y dpf
%
/dpf  {
    closepath
    gsave
    0 color ne { setFillColor } if
    clip fillpath grestore
  } bind def

%******************************************************************************
% Draw Polygon Solid
%    x y dps
%
/dps  {
    closepath
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse
    fill grestore
    0 color ne { setLineColor } if stroke
  } bind def

%******************************************************************************
% Draw Polygon Vertex
%    x y dpv
%
/dpv  {
    bblineto
  } bind def

%******************************************************************************
% Draw Circle Unfilled
%    x y radius dcu
%
/dcu  {
    /radius exch def
    /y exch def
    /x exch def

    newpath
    x y radius radius 0 360 ellipse
    gsave
    0 color ne { setLineColor } if
    stroke
    grestore
  } bind def
%******************************************************************************
% Draw Circle Filled
%    x y radius dcs
%
/dcf  {
    /radius exch def
    /y exch def
    /x exch def
    /minx x radius sub def
    /miny y radius sub def
    /maxx x radius add def
    /maxy y radius add def

    newpath
    x y radius radius 0 360 ellipse
    gsave
    0 color ne { setFillColor } if
    clip fillpath
    grestore
  } bind def

%******************************************************************************
% Draw Circle Solid
%    x y radius dcs
%
/dcs  {
    /radius exch def
    /y exch def
    /x exch def

          newpath
    x y radius radius 0 360 ellipse
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse
    fill grestore
    0 color ne {setLineColor} if stroke
  } bind def
%******************************************************************************
% Draw Ellipse Unfilled
%    x y xradius yradius deu
%
/delu  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    newpath
    x y xradius yradius 0 360 ellipse
    gsave
    0 color ne { setLineColor } if
    stroke
    grestore
  } bind def
%******************************************************************************
% Draw Ellipse Filled
%    x y xradius yradius def
%
/delf  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def
    /minx x xradius sub def
    /miny y yradius sub def
    /maxx x xradius add def
    /maxy y yradius add def

    newpath
    x y xradius yradius 0 360 ellipse
    gsave
    0 color ne { setFillColor } if
    clip fillpath
    grestore
  } bind def

%******************************************************************************
% Draw Ellipse Solid
%    x y xradius yradius des
%
/dels  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    newpath
    x y xradius yradius 0 360 ellipse
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse

    fill grestore
    0 color ne {setLineColor} if stroke
  } bind def
%******************************************************************************
% Draw Arc Unfilled
%    x y xradius yradius startangle endangle das
%
/dau  { newpath ellipse
        gsave
        0 color ne { setLineColor } if
        stroke
        grestore
      } bind def
%******************************************************************************
% Line Define Code.
%
/setlinedash {
    1 index length 11 gt
    {exch dup length 11 sub 11 getinterval exch } if
    setdash
  } bind def

/lpb    {
    pop
    [
    /offset 0 def
    /offcount 0 def
    /oncount 0 def
  } bind def

/lpon  {
    /oncount exch def
    pop
    oncount
  } bind def

/lpoff  {
    /offcount exch def
    pop
    oncount 0 eq
    {/offset offcount def }
    { offcount } ifelse
  } bind def

/lpe  {
    /linewidth exch def
    pop
    offset 0 ne
    { offset } if ] 0 setlinedash
    linewidth dup 1 eq {pop 0} if setlinewidth
  } bind def

/sls    { pop } bind def

/ssls  { [] 0 setdash
          1 setlinewidth
        } bind def

%******************************************************************************
% Fill pattern define code.
%
/fillpath  {
    0 color ne { setFillColor } if
    /str 1 string def
    /minx minx 66 div
    truncate 66 mul def
    /miny miny 66 div
    truncate 66 mul def

          /fillLine maxx minx sub cvi 66 idiv 1 add string def

          0 1 fillLine length 1 sub {
            fillLine exch fillChar str cvs cvi 48 add put
          } for

          minx
          miny 66 maxy
            { exch dup 3 -1 roll moveto fillLine show
          } for pop

    hatchSet 1 eq {0 color ne { setLineColor } if stroke} if
} bind def


/fds  { pop /currchar 30 def} bind def
/fdf   {
    exch
    /char exch def
    /stipple stippleArray char get def
    stipple exch currchar
    exch putinterval
    stippleArray char stipple put
    /currchar currchar 2 sub def
  } bind def
/fde  {
    pop
  } bind def
/sfp  {
    /fillChar exch def
    /hatchSet 0 def
    fillChar 8 ge {/hatchSet 1 def} if
    /StippleFont findfont 66 scalefont setfont
  } bind def
/setLineColor {
  lineRed    1000 div
  lineGreen  1000 div
  lineBlue   1000 div
  setrgbcolor
} bind def

/setFillColor {
  fillRed    1000 div
  fillGreen  1000 div
  fillBlue   1000 div
  setrgbcolor
} bind def

/slc {
  /lineBlue  exch def
  /lineGreen exch def
  /lineRed   exch def
  /color 1 def
  lineBlue 1000 eq {lineGreen 1000 eq {lineRed 1000 eq {
    /lineBlue  0 def
    /lineGreen 0 def
    /lineRed   0 def
  } if} if} if
} bind def

/sfc {
  /fillBlue  exch def
  /fillGreen exch def
  /fillRed   exch def
  /color 1 def
  fillBlue 1000 eq {fillGreen 1000 eq {fillRed 1000 eq {
    /fillBlue  0 def
    /fillGreen 0 def
    /fillRed   0 def
  } if} if} if
} bind def
%******************************************************************************
%
% End of Cadence ps.prologue
%
%******************************************************************************
/setpacking where
{
	pop currpack setpacking
} if
%%EndProlog
/#copies 1 def
0 0 2550 3300 300 pap
%%Page: cds 1
gis
0 0 2125 674 clwin
ssls
0 0 0 slc
0 0 0 sfc
35 649 dlt
0 -29 dlv
1 -7 dlv
2 -5 dlv
5 -1 dlv
11 0 dlv
5 1 dlv
2 5 dlv
1 7 dlv
0 29 dlv
dle
74 614 dlt
1 -4 dlv
3 -3 dlv
17 0 dlv
4 3 dlv
0 4 dlv
0 7 dlv
0 4 dlv
-4 3 dlv
-18 2 dlv
-2 3 dlv
-1 4 dlv
0 5 dlv
1 4 dlv
3 3 dlv
16 0 dlv
4 -3 dlv
1 -4 dlv
dle
136 607 dlt
-24 0 dlv
0 42 dlv
24 0 dlv
dle
-23 0 135 629 dls
148 607 dlt
0 42 dlv
21 0 dlv
4 -3 dlv
0 -4 dlv
0 -10 dlv
0 -4 dlv
-4 -3 dlv
-21 0 dlv
dle
169 625 dlt
4 -2 dlv
0 -5 dlv
0 -11 dlv
dle
188 631 dlt
0 4 dlv
2 0 dlv
0 -4 dlv
-2 0 dlv
dle
188 611 dlt
2 0 dlv
0 -4 dlv
-2 0 dlv
0 4 dlv
dle
211 637 dlt
11 -30 dlv
11 30 dlv
dle
245 613 dlt
2 -5 dlv
3 -1 dlv
10 0 dlv
4 1 dlv
1 3 dlv
0 7 dlv
-1 3 dlv
-4 2 dlv
-10 0 dlv
-3 1 dlv
-2 3 dlv
0 5 dlv
2 3 dlv
3 2 dlv
10 0 dlv
4 -2 dlv
1 -4 dlv
dle
0 42 277 607 dls
277 628 dlt
2 6 dlv
3 3 dlv
9 0 dlv
4 -3 dlv
2 -6 dlv
0 -21 dlv
dle
0 30 309 607 dls
309 628 dlt
3 6 dlv
3 3 dlv
6 0 dlv
3 -3 dlv
2 -7 dlv
dle
338 623 dlt
21 0 dlv
0 4 dlv
-1 7 dlv
-4 3 dlv
-11 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -10 dlv
2 -7 dlv
3 -3 dlv
12 0 dlv
3 4 dlv
dle
371 623 dlt
21 0 dlv
0 4 dlv
-1 7 dlv
-4 3 dlv
-11 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -10 dlv
2 -7 dlv
3 -3 dlv
12 0 dlv
3 4 dlv
dle
0 42 404 607 dls
404 623 dlt
4 0 dlv
13 14 dlv
dle
14 -16 408 623 dls
434 631 dlt
2 4 dlv
3 2 dlv
9 0 dlv
4 -2 dlv
2 -4 dlv
0 -24 dlv
dle
454 620 dlt
-2 2 dlv
-3 2 dlv
-11 0 dlv
-2 -2 dlv
-2 -2 dlv
0 -9 dlv
2 -3 dlv
2 -1 dlv
11 0 dlv
3 1 dlv
2 3 dlv
dle
35 539 dlt
0 42 dlv
20 0 dlv
5 -1 dlv
3 -4 dlv
1 -9 dlv
0 -14 dlv
-1 -8 dlv
-2 -5 dlv
-6 -1 dlv
-20 0 dlv
dle
76 539 dlt
15 42 dlv
16 -42 dlv
dle
-22 0 102 550 dls
25 0 119 581 dls
0 -42 132 581 dls
180 539 dlt
-24 0 dlv
0 42 dlv
24 0 dlv
dle
-23 0 179 561 dls
195 563 dlt
0 4 dlv
2 0 dlv
0 -4 dlv
-2 0 dlv
dle
195 543 dlt
2 0 dlv
0 -4 dlv
-2 0 dlv
0 4 dlv
dle
218 546 dlt
1 -4 dlv
3 -3 dlv
17 0 dlv
4 3 dlv
0 4 dlv
0 7 dlv
0 4 dlv
-4 3 dlv
-18 2 dlv
-2 3 dlv
-1 4 dlv
0 5 dlv
1 4 dlv
3 3 dlv
16 0 dlv
4 -3 dlv
1 -4 dlv
dle
256 569 dlt
0 -21 dlv
2 -6 dlv
3 -3 dlv
9 0 dlv
4 3 dlv
2 5 dlv
dle
0 -30 276 569 dls
0 30 288 539 dls
288 560 dlt
2 6 dlv
3 3 dlv
10 0 dlv
4 -3 dlv
1 -6 dlv
0 -21 dlv
dle
329 539 dlt
0 42 dlv
28 -42 dlv
0 42 dlv
dle
374 539 dlt
-3 3 dlv
-2 7 dlv
0 11 dlv
2 6 dlv
3 3 dlv
11 0 dlv
4 -3 dlv
1 -7 dlv
0 -10 dlv
-1 -7 dlv
-4 -3 dlv
-11 0 dlv
dle
402 569 dlt
11 -30 dlv
11 30 dlv
dle
454 566 dlt
12 15 dlv
0 -42 dlv
dle
488 573 dlt
1 5 dlv
3 3 dlv
15 0 dlv
4 -3 dlv
1 -5 dlv
0 -6 dlv
-1 -5 dlv
-4 -3 dlv
-15 -3 dlv
-3 -3 dlv
-1 -5 dlv
-1 -9 dlv
25 0 dlv
dle
525 573 dlt
1 5 dlv
3 3 dlv
15 0 dlv
4 -3 dlv
1 -5 dlv
0 -6 dlv
-1 -5 dlv
-4 -3 dlv
-15 -3 dlv
-3 -3 dlv
-1 -5 dlv
-1 -9 dlv
25 0 dlv
dle
564 563 dlt
0 4 dlv
2 0 dlv
0 -4 dlv
-2 0 dlv
dle
564 543 dlt
2 0 dlv
0 -4 dlv
-2 0 dlv
0 4 dlv
dle
578 574 dlt
1 4 dlv
3 3 dlv
17 0 dlv
4 -3 dlv
0 -4 dlv
0 -5 dlv
0 -5 dlv
-4 -2 dlv
-12 0 dlv
dle
599 562 dlt
4 -3 dlv
0 -6 dlv
0 -6 dlv
0 -5 dlv
-4 -3 dlv
-17 0 dlv
-3 3 dlv
-1 5 dlv
dle
641 550 dlt
-26 0 dlv
23 31 dlv
0 -42 dlv
dle
656 563 dlt
0 4 dlv
2 0 dlv
0 -4 dlv
-2 0 dlv
dle
656 543 dlt
2 0 dlv
0 -4 dlv
-2 0 dlv
0 4 dlv
dle
670 546 dlt
1 -4 dlv
3 -3 dlv
17 0 dlv
4 3 dlv
0 6 dlv
0 11 dlv
0 5 dlv
-4 3 dlv
-16 0 dlv
-3 -3 dlv
-2 -4 dlv
0 21 dlv
25 0 dlv
dle
727 562 dlt
5 -3 dlv
0 -4 dlv
0 -9 dlv
0 -4 dlv
-4 -3 dlv
-17 0 dlv
-3 3 dlv
-1 4 dlv
0 9 dlv
1 4 dlv
4 3 dlv
15 0 dlv
4 2 dlv
1 5 dlv
0 5 dlv
-1 4 dlv
-4 3 dlv
-15 0 dlv
-3 -3 dlv
-1 -4 dlv
0 -5 dlv
1 -4 dlv
3 -3 dlv
dle
754 573 dlt
1 5 dlv
3 3 dlv
15 0 dlv
4 -3 dlv
1 -5 dlv
0 -6 dlv
-1 -5 dlv
-4 -3 dlv
-15 -3 dlv
-3 -3 dlv
-1 -5 dlv
-1 -9 dlv
25 0 dlv
dle
799 539 dlt
-6 1 dlv
-2 5 dlv
-1 8 dlv
0 14 dlv
1 9 dlv
2 4 dlv
6 1 dlv
9 0 dlv
5 -1 dlv
2 -4 dlv
1 -9 dlv
0 -14 dlv
-1 -8 dlv
-2 -5 dlv
-5 -1 dlv
-10 0 dlv
dle
26 42 790 539 dls
829 573 dlt
1 5 dlv
3 3 dlv
15 0 dlv
4 -3 dlv
1 -5 dlv
0 -6 dlv
-1 -5 dlv
-4 -3 dlv
-15 -3 dlv
-3 -3 dlv
-1 -5 dlv
-1 -9 dlv
25 0 dlv
dle
874 539 dlt
-6 1 dlv
-2 5 dlv
-1 8 dlv
0 14 dlv
1 9 dlv
2 4 dlv
6 1 dlv
9 0 dlv
5 -1 dlv
2 -4 dlv
1 -9 dlv
0 -14 dlv
-1 -8 dlv
-2 -5 dlv
-5 -1 dlv
-10 0 dlv
dle
26 42 865 539 dls
35 472 dlt
0 42 dlv
21 0 dlv
4 -2 dlv
1 -5 dlv
0 -10 dlv
-1 -4 dlv
-4 -3 dlv
-21 0 dlv
dle
73 514 dlt
0 -42 dlv
21 0 dlv
dle
115 472 dlt
-6 1 dlv
-2 5 dlv
-1 8 dlv
0 14 dlv
1 9 dlv
2 4 dlv
6 1 dlv
11 0 dlv
6 -1 dlv
3 -5 dlv
1 -8 dlv
0 -14 dlv
-1 -8 dlv
-3 -5 dlv
-6 -1 dlv
-11 0 dlv
dle
25 0 148 514 dls
0 -42 161 514 dls
194 479 dlt
1 -4 dlv
3 -3 dlv
17 0 dlv
4 3 dlv
0 4 dlv
0 7 dlv
0 4 dlv
-4 3 dlv
-18 2 dlv
-2 3 dlv
-1 4 dlv
0 5 dlv
1 4 dlv
3 3 dlv
16 0 dlv
4 -3 dlv
1 -4 dlv
dle
0 42 232 472 dls
245 514 dlt
25 0 dlv
-26 -42 dlv
27 0 dlv
dle
307 472 dlt
-24 0 dlv
0 42 dlv
24 0 dlv
dle
-23 0 306 494 dls
322 496 dlt
0 4 dlv
2 0 dlv
0 -4 dlv
-2 0 dlv
dle
322 476 dlt
2 0 dlv
0 -4 dlv
-2 0 dlv
0 4 dlv
dle
365 495 dlt
5 -3 dlv
0 -4 dlv
0 -9 dlv
0 -4 dlv
-4 -3 dlv
-17 0 dlv
-3 3 dlv
-1 4 dlv
0 9 dlv
1 4 dlv
4 3 dlv
15 0 dlv
4 2 dlv
1 5 dlv
0 5 dlv
-1 4 dlv
-4 3 dlv
-15 0 dlv
-3 -3 dlv
-1 -4 dlv
0 -5 dlv
1 -4 dlv
3 -3 dlv
dle
387 472 dlt
-2 0 dlv
0 4 dlv
2 0 dlv
0 -4 dlv
dle
399 507 dlt
1 4 dlv
3 3 dlv
17 0 dlv
4 -3 dlv
0 -4 dlv
0 -5 dlv
0 -5 dlv
-4 -2 dlv
-12 0 dlv
dle
420 495 dlt
4 -3 dlv
0 -6 dlv
0 -6 dlv
0 -5 dlv
-4 -3 dlv
-17 0 dlv
-3 3 dlv
-1 5 dlv
dle
456 495 dlt
5 -3 dlv
0 -4 dlv
0 -9 dlv
0 -4 dlv
-4 -3 dlv
-17 0 dlv
-3 3 dlv
-1 4 dlv
0 9 dlv
1 4 dlv
4 3 dlv
15 0 dlv
4 2 dlv
1 5 dlv
0 5 dlv
-1 4 dlv
-4 3 dlv
-15 0 dlv
-3 -3 dlv
-1 -4 dlv
0 -5 dlv
1 -4 dlv
3 -3 dlv
dle
20 30 482 472 dls
20 -30 483 502 dls
524 499 dlt
12 15 dlv
0 -42 dlv
dle
548 499 dlt
12 15 dlv
0 -42 dlv
dle
577 472 dlt
-2 0 dlv
0 4 dlv
2 0 dlv
0 -4 dlv
dle
598 472 dlt
-6 1 dlv
-2 5 dlv
-1 8 dlv
0 14 dlv
1 9 dlv
2 4 dlv
6 1 dlv
9 0 dlv
5 -1 dlv
2 -4 dlv
1 -9 dlv
0 -14 dlv
-1 -8 dlv
-2 -5 dlv
-5 -1 dlv
-10 0 dlv
dle
26 42 589 472 dls
636 472 dlt
-6 1 dlv
-2 5 dlv
-1 8 dlv
0 14 dlv
1 9 dlv
2 4 dlv
6 1 dlv
9 0 dlv
5 -1 dlv
2 -4 dlv
1 -9 dlv
0 -14 dlv
-1 -8 dlv
-2 -5 dlv
-5 -1 dlv
-10 0 dlv
dle
26 42 627 472 dls
0 42 674 472 dls
0 30 686 472 dls
686 493 dlt
2 6 dlv
3 3 dlv
10 0 dlv
4 -3 dlv
1 -6 dlv
0 -21 dlv
dle
738 493 dlt
-1 6 dlv
-4 3 dlv
-10 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -10 dlv
2 -7 dlv
3 -3 dlv
10 0 dlv
4 3 dlv
1 5 dlv
dle
0 42 750 472 dls
750 493 dlt
2 6 dlv
3 3 dlv
9 0 dlv
4 -3 dlv
2 -6 dlv
0 -21 dlv
dle
782 488 dlt
21 0 dlv
0 4 dlv
-1 7 dlv
-4 3 dlv
-11 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -10 dlv
2 -7 dlv
3 -3 dlv
12 0 dlv
3 4 dlv
dle
815 478 dlt
2 -5 dlv
3 -1 dlv
10 0 dlv
4 1 dlv
1 3 dlv
0 7 dlv
-1 3 dlv
-4 2 dlv
-10 0 dlv
-3 1 dlv
-2 3 dlv
0 5 dlv
2 3 dlv
3 2 dlv
10 0 dlv
4 -2 dlv
1 -4 dlv
dle
35 446 dlt
0 -42 dlv
21 0 dlv
dle
0 30 68 404 dls
0 4 68 442 dls
0 42 80 404 dls
80 425 dlt
2 6 dlv
3 3 dlv
11 0 dlv
4 -3 dlv
1 -7 dlv
0 -10 dlv
-1 -7 dlv
-4 -3 dlv
-11 0 dlv
-3 3 dlv
-2 5 dlv
dle
0 30 113 404 dls
113 425 dlt
3 6 dlv
3 3 dlv
6 0 dlv
3 -3 dlv
2 -7 dlv
dle
142 428 dlt
2 4 dlv
3 2 dlv
9 0 dlv
4 -2 dlv
2 -4 dlv
0 -24 dlv
dle
162 417 dlt
-2 2 dlv
-3 2 dlv
-11 0 dlv
-2 -2 dlv
-2 -2 dlv
0 -9 dlv
2 -3 dlv
2 -1 dlv
11 0 dlv
3 1 dlv
2 3 dlv
dle
0 30 174 404 dls
174 425 dlt
3 6 dlv
3 3 dlv
6 0 dlv
3 -3 dlv
2 -7 dlv
dle
203 434 dlt
10 -30 dlv
10 30 dlv
dle
213 404 dlt
-2 -6 dlv
-3 -4 dlv
-2 0 dlv
dle
238 428 dlt
0 4 dlv
2 0 dlv
0 -4 dlv
-2 0 dlv
dle
238 408 dlt
2 0 dlv
0 -4 dlv
-2 0 dlv
0 4 dlv
dle
0 42 270 404 dls
282 428 dlt
2 4 dlv
3 2 dlv
9 0 dlv
4 -2 dlv
2 -4 dlv
0 -24 dlv
dle
302 417 dlt
-2 2 dlv
-3 2 dlv
-11 0 dlv
-2 -2 dlv
-2 -2 dlv
0 -9 dlv
2 -3 dlv
2 -1 dlv
11 0 dlv
3 1 dlv
2 3 dlv
dle
0 42 314 404 dls
314 425 dlt
2 6 dlv
3 3 dlv
11 0 dlv
4 -3 dlv
1 -7 dlv
0 -10 dlv
-1 -7 dlv
-4 -3 dlv
-11 0 dlv
-3 3 dlv
-2 5 dlv
dle
348 438 dlt
1 5 dlv
3 3 dlv
15 0 dlv
4 -3 dlv
1 -5 dlv
0 -6 dlv
-1 -5 dlv
-4 -3 dlv
-15 -3 dlv
-3 -3 dlv
-1 -5 dlv
-1 -9 dlv
25 0 dlv
dle
63 368 dlt
-1 6 dlv
-2 4 dlv
-5 1 dlv
-12 0 dlv
-5 -1 dlv
-2 -5 dlv
-1 -8 dlv
0 -14 dlv
1 -9 dlv
2 -4 dlv
5 -1 dlv
12 0 dlv
5 1 dlv
2 5 dlv
1 5 dlv
dle
75 353 dlt
21 0 dlv
0 4 dlv
-1 7 dlv
-4 3 dlv
-11 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -10 dlv
2 -7 dlv
3 -3 dlv
12 0 dlv
3 4 dlv
dle
0 42 108 337 dls
0 42 120 337 dls
135 361 dlt
0 4 dlv
2 0 dlv
0 -4 dlv
-2 0 dlv
dle
135 341 dlt
2 0 dlv
0 -4 dlv
-2 0 dlv
0 4 dlv
dle
0 30 275 337 dls
0 4 275 375 dls
0 30 287 337 dls
287 358 dlt
2 6 dlv
3 3 dlv
10 0 dlv
4 -3 dlv
1 -6 dlv
0 -21 dlv
dle
319 367 dlt
11 -30 dlv
11 30 dlv
dle
353 353 dlt
21 0 dlv
0 4 dlv
-1 7 dlv
-4 3 dlv
-11 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -10 dlv
2 -7 dlv
3 -3 dlv
12 0 dlv
3 4 dlv
dle
0 30 386 337 dls
386 358 dlt
3 6 dlv
3 3 dlv
6 0 dlv
3 -3 dlv
2 -7 dlv
dle
19 0 415 367 dls
420 375 dlt
0 -32 dlv
2 -5 dlv
4 -1 dlv
3 0 dlv
4 1 dlv
2 5 dlv
0 5 dlv
dle
447 353 dlt
21 0 dlv
0 4 dlv
-1 7 dlv
-4 3 dlv
-11 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -10 dlv
2 -7 dlv
3 -3 dlv
12 0 dlv
3 4 dlv
dle
0 30 480 337 dls
480 358 dlt
3 6 dlv
3 3 dlv
6 0 dlv
3 -3 dlv
2 -7 dlv
dle
26 0 509 335 dls
19 0 549 367 dls
554 375 dlt
0 -32 dlv
2 -5 dlv
4 -1 dlv
3 0 dlv
4 1 dlv
2 5 dlv
0 5 dlv
dle
0 42 581 337 dls
581 358 dlt
2 6 dlv
3 3 dlv
11 0 dlv
4 -3 dlv
1 -7 dlv
0 -10 dlv
-1 -7 dlv
-4 -3 dlv
-11 0 dlv
-3 3 dlv
-2 5 dlv
dle
35 311 dlt
14 -42 dlv
15 42 dlv
dle
0 30 76 269 dls
0 4 76 307 dls
88 285 dlt
21 0 dlv
0 4 dlv
-1 7 dlv
-4 3 dlv
-11 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -10 dlv
2 -7 dlv
3 -3 dlv
12 0 dlv
3 4 dlv
dle
121 299 dlt
8 -30 dlv
7 30 dlv
8 -30 dlv
8 30 dlv
dle
167 293 dlt
0 4 dlv
2 0 dlv
0 -4 dlv
-2 0 dlv
dle
167 273 dlt
2 0 dlv
0 -4 dlv
-2 0 dlv
0 4 dlv
dle
280 275 dlt
2 -5 dlv
3 -1 dlv
10 0 dlv
4 1 dlv
1 3 dlv
0 7 dlv
-1 3 dlv
-4 2 dlv
-10 0 dlv
-3 1 dlv
-2 3 dlv
0 5 dlv
2 3 dlv
3 2 dlv
10 0 dlv
4 -2 dlv
1 -4 dlv
dle
332 290 dlt
-1 6 dlv
-4 3 dlv
-10 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -10 dlv
2 -7 dlv
3 -3 dlv
10 0 dlv
4 3 dlv
1 5 dlv
dle
0 42 344 269 dls
344 290 dlt
2 6 dlv
3 3 dlv
9 0 dlv
4 -3 dlv
2 -6 dlv
0 -21 dlv
dle
376 285 dlt
21 0 dlv
0 4 dlv
-1 7 dlv
-4 3 dlv
-11 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -10 dlv
2 -7 dlv
3 -3 dlv
12 0 dlv
3 4 dlv
dle
0 30 409 269 dls
409 290 dlt
2 6 dlv
3 3 dlv
7 0 dlv
3 -3 dlv
2 -6 dlv
0 -21 dlv
dle
426 290 dlt
2 6 dlv
3 3 dlv
7 0 dlv
3 -3 dlv
2 -6 dlv
0 -21 dlv
dle
455 293 dlt
2 4 dlv
3 2 dlv
9 0 dlv
4 -2 dlv
2 -4 dlv
0 -24 dlv
dle
475 282 dlt
-2 2 dlv
-3 2 dlv
-11 0 dlv
-2 -2 dlv
-2 -2 dlv
0 -9 dlv
2 -3 dlv
2 -1 dlv
11 0 dlv
3 1 dlv
2 3 dlv
dle
19 0 487 299 dls
492 307 dlt
0 -32 dlv
2 -5 dlv
4 -1 dlv
3 0 dlv
4 1 dlv
2 5 dlv
0 5 dlv
dle
0 30 519 269 dls
0 4 519 307 dls
551 290 dlt
-1 6 dlv
-4 3 dlv
-10 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -10 dlv
2 -7 dlv
3 -3 dlv
10 0 dlv
4 3 dlv
1 5 dlv
dle
35 201 dlt
0 42 dlv
21 0 dlv
4 -2 dlv
1 -5 dlv
0 -10 dlv
-1 -4 dlv
-4 -3 dlv
-21 0 dlv
dle
0 42 73 201 dls
90 201 dlt
-3 3 dlv
-2 7 dlv
0 11 dlv
2 6 dlv
3 3 dlv
11 0 dlv
4 -3 dlv
1 -7 dlv
0 -10 dlv
-1 -7 dlv
-4 -3 dlv
-11 0 dlv
dle
19 0 118 231 dls
123 239 dlt
0 -32 dlv
2 -5 dlv
4 -1 dlv
3 0 dlv
4 1 dlv
2 5 dlv
0 5 dlv
dle
159 201 dlt
15 42 dlv
16 -42 dlv
dle
-22 0 185 212 dls
0 30 202 201 dls
202 222 dlt
3 6 dlv
3 3 dlv
6 0 dlv
3 -3 dlv
2 -7 dlv
dle
231 217 dlt
21 0 dlv
0 4 dlv
-1 7 dlv
-4 3 dlv
-11 0 dlv
-3 -3 dlv
-2 -7 dlv
0 -10 dlv
2 -7 dlv
3 -3 dlv
12 0 dlv
3 4 dlv
dle
264 225 dlt
2 4 dlv
3 2 dlv
9 0 dlv
4 -2 dlv
2 -4 dlv
0 -24 dlv
dle
284 214 dlt
-2 2 dlv
-3 2 dlv
-11 0 dlv
-2 -2 dlv
-2 -2 dlv
0 -9 dlv
2 -3 dlv
2 -1 dlv
11 0 dlv
3 1 dlv
2 3 dlv
dle
299 225 dlt
0 4 dlv
2 0 dlv
0 -4 dlv
-2 0 dlv
dle
299 205 dlt
2 0 dlv
0 -4 dlv
-2 0 dlv
0 4 dlv
dle
340 243 dlt
-6 -1 dlv
-2 -4 dlv
-1 -9 dlv
0 -14 dlv
1 -8 dlv
2 -5 dlv
6 -1 dlv
dle
361 243 dlt
-6 -1 dlv
-2 -4 dlv
-1 -9 dlv
0 -14 dlv
1 -8 dlv
2 -5 dlv
6 -1 dlv
dle
21 0 375 219 dls
410 236 dlt
1 4 dlv
3 3 dlv
17 0 dlv
4 -3 dlv
0 -4 dlv
0 -5 dlv
0 -5 dlv
-4 -2 dlv
-12 0 dlv
dle
431 224 dlt
4 -3 dlv
0 -6 dlv
0 -6 dlv
0 -5 dlv
-4 -3 dlv
-17 0 dlv
-3 3 dlv
-1 5 dlv
dle
452 201 dlt
-2 0 dlv
0 4 dlv
2 0 dlv
0 -4 dlv
dle
464 236 dlt
1 4 dlv
3 3 dlv
17 0 dlv
4 -3 dlv
0 -4 dlv
0 -5 dlv
0 -5 dlv
-4 -2 dlv
-12 0 dlv
dle
485 224 dlt
4 -3 dlv
0 -6 dlv
0 -6 dlv
0 -5 dlv
-4 -3 dlv
-17 0 dlv
-3 3 dlv
-1 5 dlv
dle
501 208 dlt
1 -4 dlv
3 -3 dlv
17 0 dlv
4 3 dlv
0 6 dlv
0 11 dlv
0 5 dlv
-4 3 dlv
-16 0 dlv
-3 -3 dlv
-2 -4 dlv
0 21 dlv
25 0 dlv
dle
21 0 549 219 dls
585 235 dlt
1 5 dlv
3 3 dlv
15 0 dlv
4 -3 dlv
1 -5 dlv
0 -6 dlv
-1 -5 dlv
-4 -3 dlv
-15 -3 dlv
-3 -3 dlv
-1 -5 dlv
-1 -9 dlv
25 0 dlv
dle
626 201 dlt
-2 0 dlv
0 4 dlv
2 0 dlv
0 -4 dlv
dle
663 235 dlt
0 5 dlv
-4 3 dlv
-17 0 dlv
-3 -3 dlv
-1 -5 dlv
0 -26 dlv
1 -5 dlv
3 -3 dlv
17 0 dlv
4 3 dlv
0 5 dlv
0 8 dlv
0 5 dlv
-4 3 dlv
-16 0 dlv
-3 -3 dlv
-2 -6 dlv
dle
676 235 dlt
1 5 dlv
3 3 dlv
15 0 dlv
4 -3 dlv
1 -5 dlv
0 -6 dlv
-1 -5 dlv
-4 -3 dlv
-15 -3 dlv
-3 -3 dlv
-1 -5 dlv
-1 -9 dlv
25 0 dlv
dle
712 208 dlt
1 -4 dlv
3 -3 dlv
17 0 dlv
4 3 dlv
0 6 dlv
0 11 dlv
0 5 dlv
-4 3 dlv
-16 0 dlv
-3 -3 dlv
-2 -4 dlv
0 21 dlv
25 0 dlv
dle
749 243 dlt
6 -1 dlv
2 -4 dlv
1 -9 dlv
0 -14 dlv
-1 -8 dlv
-2 -5 dlv
-6 -1 dlv
dle
788 243 dlt
-6 -1 dlv
-2 -4 dlv
-1 -9 dlv
0 -14 dlv
1 -8 dlv
2 -5 dlv
6 -1 dlv
dle
800 236 dlt
1 4 dlv
3 3 dlv
17 0 dlv
4 -3 dlv
0 -4 dlv
0 -5 dlv
0 -5 dlv
-4 -2 dlv
-12 0 dlv
dle
821 224 dlt
4 -3 dlv
0 -6 dlv
0 -6 dlv
0 -5 dlv
-4 -3 dlv
-17 0 dlv
-3 3 dlv
-1 5 dlv
dle
842 201 dlt
-2 0 dlv
0 4 dlv
2 0 dlv
0 -4 dlv
dle
879 235 dlt
0 5 dlv
-4 3 dlv
-17 0 dlv
-3 -3 dlv
-1 -5 dlv
0 -26 dlv
1 -5 dlv
3 -3 dlv
17 0 dlv
4 3 dlv
0 5 dlv
0 8 dlv
0 5 dlv
-4 3 dlv
-16 0 dlv
-3 -3 dlv
-2 -6 dlv
dle
892 235 dlt
1 5 dlv
3 3 dlv
15 0 dlv
4 -3 dlv
1 -5 dlv
0 -6 dlv
-1 -5 dlv
-4 -3 dlv
-15 -3 dlv
-3 -3 dlv
-1 -5 dlv
-1 -9 dlv
25 0 dlv
dle
928 208 dlt
1 -4 dlv
3 -3 dlv
17 0 dlv
4 3 dlv
0 6 dlv
0 11 dlv
0 5 dlv
-4 3 dlv
-16 0 dlv
-3 -3 dlv
-2 -4 dlv
0 21 dlv
25 0 dlv
dle
975 235 dlt
1 5 dlv
3 3 dlv
15 0 dlv
4 -3 dlv
1 -5 dlv
0 -6 dlv
-1 -5 dlv
-4 -3 dlv
-15 -3 dlv
-3 -3 dlv
-1 -5 dlv
-1 -9 dlv
25 0 dlv
dle
1016 201 dlt
-2 0 dlv
0 4 dlv
2 0 dlv
0 -4 dlv
dle
1053 235 dlt
0 5 dlv
-4 3 dlv
-17 0 dlv
-3 -3 dlv
-1 -5 dlv
0 -26 dlv
1 -5 dlv
3 -3 dlv
17 0 dlv
4 3 dlv
0 5 dlv
0 8 dlv
0 5 dlv
-4 3 dlv
-16 0 dlv
-3 -3 dlv
-2 -6 dlv
dle
1085 224 dlt
5 -3 dlv
0 -4 dlv
0 -9 dlv
0 -4 dlv
-4 -3 dlv
-17 0 dlv
-3 3 dlv
-1 4 dlv
0 9 dlv
1 4 dlv
4 3 dlv
15 0 dlv
4 2 dlv
1 5 dlv
0 5 dlv
-1 4 dlv
-4 3 dlv
-15 0 dlv
-3 -3 dlv
-1 -4 dlv
0 -5 dlv
1 -4 dlv
3 -3 dlv
dle
1102 243 dlt
26 0 dlv
-19 -42 dlv
dle
1140 208 dlt
1 -4 dlv
3 -3 dlv
17 0 dlv
4 3 dlv
0 6 dlv
0 11 dlv
0 5 dlv
-4 3 dlv
-16 0 dlv
-3 -3 dlv
-2 -4 dlv
0 21 dlv
25 0 dlv
dle
1177 243 dlt
6 -1 dlv
2 -4 dlv
1 -9 dlv
0 -14 dlv
-1 -8 dlv
-2 -5 dlv
-6 -1 dlv
dle
1198 243 dlt
6 -1 dlv
2 -4 dlv
1 -9 dlv
0 -14 dlv
-1 -8 dlv
-2 -5 dlv
-6 -1 dlv
dle
674 2125 0 0 dbu
%!PS-Adobe-3.0
%%DocumentFonts: Helvetica Times-Roman Courier
%%Creator: Cadence Design Systems
%%EndComments
%%BeginProlog
%
% Start of Cadence ps.prologue -- Version 5.3.1
% Adobe Postscript Level 2 Color Version.
/setpacking where
{
	/currpack currentpacking def
	pop true setpacking
} if
%******************************************************************************
% Graphics initialization routine.
%
/gis  {
  0 setgray
  save
  mark
  newpath

%
% Scale postscripts 72 dpi divided by the plotter resolution set in pap.
%
  72 resolution div
  dup
  scale

%
% Move the origin of the plot up and to the right so the plotters margin
% is observed.
%
  offsetX offsetY translate

  /stippleArray 10 array def
    stippleArray
     dup    0  <FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
                FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF> put
     dup    1  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    2  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    3  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    4  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    5  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    6  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    7  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    8  <08080404020201018080404020201010
		08080404020201018080404020201010> put
            9  <08081414222241418080414122221414
                08081414222241418080414122221414> put

  /newFont 10 dict def
  newFont begin

    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
    /FontBBox [0 0 1 1] def

    /Encoding 256 array def
    0 1 255 {Encoding exch /.notdef put} for
    Encoding
      dup 48 /0  put
      dup 49 /1  put
      dup 50 /2  put
      dup 51 /3  put
      dup 52 /4  put
      dup 53 /5  put
      dup 54 /6  put
      dup 55 /7  put
      dup 56 /8  put
          57 /9  put


    /BuildChar {
        /char exch def
        /fontdict exch def
        /charname fontdict /Encoding get char get def

         1 0 setcharwidth

          16 16 true
          [16 0 0 -16 -.5 15.50]
           stippleArray char 48 sub 1 getinterval cvx
          imagemask
    } def

  end
  /StippleFont newFont definefont 66 scalefont setfont
  /fillChar 0 def

  /ellipsedict 8 dict def
  ellipsedict /mtrx matrix put

  /xformdict 8 dict def
  xformdict /xformmtrx matrix put

  /color     0 def

  /lineRed   0 def
  /lineGreen 0 def
  /lineBlue  0 def

  /fillRed   0 def
  /fillGreen 0 def
  /fillBlue  0 def

  /hatchSet  0 def

  /rht 0 def
  /rw 0 def
  /ils 1.0 def
  /textalign 1 def

} bind def

%******************************************************************************
% Paper call.  Sets resolution page height and page width.
%
/pap {
    /resolution exch def
    /pageHeight exch def
    /pageWidth exch def
    /offsetY exch def
    /offsetX exch def

  } bind def

%******************************************************************************
% Plot is done.
%
/gfs  {
    showpage
    cleartomark
    restore
  } bind def

%******************************************************************************
% Next Page sequence.
%
/nxp  {

    showpage
    newpath

%
% Scale postscripts 72 dpi divided by the plotter resolution set in pap.
%
    72 resolution div
    dup
    scale
%
% Move the origin of the plot up and to the right so the plotters margin
% is observed.
%
    offsetX offsetY translate
    /ils 1.0 def
    /textalign 1 def
  } bind def

%******************************************************************************
% Rotate Plot Sequence.
%
/rotp  {
  pageWidth 0  translate  %% This moves lower left of plot to
                          %% lower right of page.

  90 rotate    %% rotate plot 90 degs.
} bind def
%******************************************************************************
% Clipping Window
%
/clwin  {
    initclip
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    newpath
    x1 y1 moveto
    x2 y1 lineto
    x2 y2 lineto
    x1 y2 lineto
    closepath
    clip
} bind def
%******************************************************************************
% These to routines keep track of the bounding box of the shape.
% This information is used when filling the drawn shape.
%
/bblineto {
  dup dup
  /cury exch def
  miny lt {/miny exch def}
    {dup maxy gt { /maxy exch def }
           {pop } ifelse } ifelse
  dup dup
  minx lt {/minx exch def}
    {dup maxx gt { /maxx exch def }
           { pop } ifelse } ifelse
  cury lineto
} bind def

/bbmoveto {
  dup dup
  /miny exch def /maxy exch def /cury exch def
  dup dup
  /minx exch def /maxx exch def
  cury moveto
} bind def
%******************************************************************************
% Internal ellipical arc routine.
%    x y xradius yradius startangle endangle ellipse
%
/ellipse
  {
    /endangle exch def
    /startangle exch def
    /yrad exch def
    /xrad exch def
    /y exch def
    /x exch def

    startangle endangle gt {
      save
      /tmpangle startangle def
      /startangle endangle def
      /endangle tmpangle def
      restore
    } if

    ellipsedict begin
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
    end
  } bind def
%******************************************************************************
% Resident Font Scale Sequence
%    x y rfss
%
/rfss  {
    4 2 roll
    dup
    3 div
    add
    scalefont
    setfont
    0 color ne {setLineColor}
               { 0 setgray } ifelse
  } bind def
%******************************************************************************
% Resident Font End
%
%
/rfe
{
/width exch def
5 1 roll
moveto

xformdict begin
/savematrix xformmtrx currentmatrix def

exch 				% rotate mirror to mirror rotate
matrix rotate concat		% add rotation to current transform matrix
dup 1 eq
	{pop 1 -1}		% X mirror

	{2 eq
		{-1 1}		% Y mirror
		{1 1}		% No mirror
	ifelse}
ifelse matrix scale concat	% add mirror to current transform matrix


dup				% duplicate (string)
length				% replace one of the strings with its length
dup 0 ne
{
	3 -1 roll		% move fixed width flag to top of stack
	0 eq
	{			% if flag is false (0) do old string handling
		/numChr exch def
		dup stringwidth	%stack  wy,wx,(string)
		pop
		width
		exch sub	%stack  xdiff,ydiff,(string)

		cvi
		numChr idiv	%stack  xspace,ydiff,(string)

		/xoff exch def

		{		% this is the positioning  function for kshow
			pop pop
			xoff
			0
			rmoveto
		}

		exch
		kshow
	}

	{			% if flag is true (not 0) just show string
		pop show
	}
	ifelse
}

{
	pop pop pop
}
ifelse
      savematrix setmatrix
    end
  } bind def
%******************************************************************************
% Resident Font Text Alignment
%
/rfta {						% <align> rfta
	/textalign exch def
} bind def
%******************************************************************************
% Resident Font Interline Space
%
/rfis {						% <space> rfis
	/ils exch def
} bind def
%******************************************************************************
% Resident Font Scale
%
/rfsc {						% <ht> <rotate> <mirror> rfs
% What I need to do here is to validate <ht>.  <ht> can not be 0.  If it is 0
% then make it 1.  To do this I will need to use the roll operation and exch
% and maybe dup.  The algorithm looks like this:
% Roll stack to make it look like : <rotate> <mirror> <ht>
% duplicate <ht> so I can test it.
% If <ht> is equal to 0 then
% exchange 1 for <ht>
% In any case roll stack to make it look like: <ht> <rotate> <mirror>
% qed.
%
	3 -1 roll		% <rotate> <mirror> <ht>
	dup 0 eq
	{
		1 exch pop	% <rotate> <mirror> <ht=1>
	}
	if
	3 1 roll		% <ht> <rotate> <mirror>

	0 color ne
	{
		setLineColor
	}
	{
		0 setgray
	}
	ifelse

	/tasz 60 def
	/taln 59 def

	/ta tasz array def
	/cta ta def
	/tc 0 def
	/sa tasz array def
	/sc 0 def
} bind def
%******************************************************************************
% Resident Font Restricted Text
%
/rfrt {						% <height> <width> rfrt
	/rht exch def
	/rw exch def
	% Since restricting one dimension and not the other is not supported
	% if one dimension is turned off then ensure that both dimensions
	% are turned off (a value of 0 means no restriction)
	rht 0 eq rw 0 eq or
	{
		/rht 0 def
		/rw 0 def
	}
	if
} bind def
%******************************************************************************
% Resident Font Text Score
%
/rfts {						% <score> <start> <end> rfts
	sc tasz lt
	{
		3 -1 roll 3 array astore
		sa sc 3 -1 roll put
		/sc sc 1 add def
	}
	{
		pop pop pop
	} ifelse
} bind def
%******************************************************************************
% Resident Font Text
%
/rft {						% (text) rft
	tc taln gt tc tasz mod 0 eq and
	{
		cta /cta tasz array dup def put
	} if

	tc tasz mod exch cta 3 1 roll sc
	sa dup length array copy
	3 array astore put

	/sc 0 def
	/tc tc 1 add def
} bind def
%******************************************************************************
% Resident Font Complete
%
/rfc {						% <x> <y> rfc
	/cta ta def

	%
	% If text is restricted or if text alignment is not left, find the
	% longest text string
	%
	/mw 0 def
	rw 0 ne textalign 3 gt or
	{
		%
		% Find the widest text string
		%
		5 index		% <fn> <ht> <rot> <mir> <x> <y> <fn>
		setfont
		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			tasz mod cta exch get 0 get
			stringwidth pop dup mw gt
			{
				/mw exch def null
			}
			if

			pop
		}
		for

		/cta ta def
	}
	if

	%
	% Operand stack:		<fn> <ht> <rot> <mir> <x> <y>
	% Check for restricted text
	%
	rw 0 ne
	{

		%
		% Compute font scale factors
		%
		6 -2 roll pop		% <rot> <mir> <x> <y> <fn>
		rw mw div
		rht tc div dup ils mul 0.5 add cvi /tht exch def
		matrix scale makefont	% <rot> <mir> <x> <y> <fn>
		/mw rw def
	}
	{
		6 -2 roll		% <rot> <mir> <x> <y> <fn> <ht>
		dup 0 eq		% Test if height is 0
		{			% change to 1 if it is
                	1 exch pop	% <rot> <mir> <x> <y> <fn> <1>
		}
		if
		dup ils mul 0.5 add cvi /tht exch def
		dup mw mul /mw exch def scalefont
	}
	ifelse

	setfont				% <rot> <mir> <x> <y>

	moveto			% <rot> <mir>

	xformdict begin
		/savematrix xformmtrx currentmatrix def

		exch matrix rotate concat
		dup 1 eq
		{
			pop 1.0 -1.0		% x mirror
		}
		{
			2 eq
			{
				-1.0 1.0	% y mirror
			}
			{
				1.0 1.0		% no mirror
			}
			ifelse
		}
		ifelse
		matrix scale concat

		currentpoint

		%
		% Adjust origin for text alignment. For lc (4), cc (5), and uc
		% (6) move left by width / 2. For lr (7), cr (8), and ur (9)
		% move left by width. For cl (2), cc (5), and cr (8) move down
		% by height / 2. For ul (3), uc (6), and ur (9) move down by
		% height.
		%
		textalign 2 eq textalign 5 eq or textalign 8 eq or
		{
			tht tc mul 2 div sub
		} if
		textalign 3 eq textalign 6 eq or textalign 9 eq or
		{
			tht tc mul sub
		} if
		/oy exch def

		textalign 3 gt textalign 7 lt and
		{
			mw 2 div sub
		} if
		textalign 6 gt textalign 10 lt and
		{
			mw sub
		} if
		/ox exch def

		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			cta exch tasz mod get aload pop
			dup 3 -1 roll	% (str) [score] [score] <cnt>
			0 1 3 -1 roll 1 sub	% (str) [score] [score] 0 1 <cnt>
			{
				newpath ox oy moveto
				get aload pop pop exch	% ... <len> <start>
				dup 0 exch		% ... <len> <start> 0 <s
				5 index 3 1 roll	% ... (str) 0 <start>
				getinterval		% ... <len> <start> (.)
				stringwidth pop tht rmoveto
				3 index			% ... <len> <start> (str)
				3 1 roll exch		% ... (str) <start> <len>
%				dup 3 1 roll
%				sub
				getinterval stringwidth pop
				0 rlineto stroke
				dup
			}
			for
			pop pop
			ox oy moveto
			show

			%
			% Move origin for next line
			%
			/oy oy tht sub def
		}
		for

		savematrix setmatrix
	end
	pop					% throw away the "0"
} bind def
%******************************************************************************
% Draw line sequence.
%
/dls  {
  newpath
  moveto
  rlineto
  gsave
  0 color ne { setLineColor }
             { 0 setgray } ifelse
  stroke
  grestore
} bind def
%******************************************************************************
% Draw line to.
%
/dlt  {
  newpath
  gsave
  0 color ne { setLineColor }
             { 0 setgray } ifelse
  moveto
} bind def
%******************************************************************************
%
/dslt  {
  newpath
  gsave
  0 color ne { setLineColor }
             { 0 setgray } ifelse
  moveto
} bind def
%******************************************************************************
%
/dlv  {
  rlineto
} bind def
%******************************************************************************
%
/dle  {
  stroke
  grestore
} bind def
%******************************************************************************
% Move to.
/mps {
  newpath
  moveto
} bind def
%******************************************************************************
%
% Draw Box Unfilled
%    x1 y1 x2 y2 dbu
%
/dbu  {
    0 color ne { setLineColor } if
    newpath
    moveto
    dup 0 rlineto
    0 3 -1 roll
    rlineto
    neg 0 rlineto
    closepath
    stroke
  } bind def
%******************************************************************************
%
% Draw Box Filled
%    x1 y1 x2 y2 dbf
%
/dbf  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    newpath
    x1 y1 bbmoveto
    x2 y1 bblineto
    x2 y2 bblineto
    x1 y2 bblineto
    closepath
    gsave
    0 color ne { setFillColor } if
    clip fillpath grestore
  } bind def
%******************************************************************************
% Draw Box Solid
%    x1 y1 x2 y2 dsb
%
/dbs  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    newpath
    x1 y1 moveto
    x2 y1 lineto
    x2 y2 lineto
    x1 y2 lineto
    closepath
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse
    fill grestore
    0 color ne { setLineColor } if stroke
  } bind def

%******************************************************************************
% Draw Polygon Begin
%    x y dpb
%
/dpb  {
    newpath bbmoveto
  } bind def

%******************************************************************************
% Draw Polygon Unfilled
%    x y dpu
%
/dpu  {
      closepath
      gsave
      0 color ne { setLineColor } if
      stroke
      grestore
   } bind def

%******************************************************************************
% Draw Polygon Filled
%    x y dpf
%
/dpf  {
    closepath
    gsave
    0 color ne { setFillColor } if
    clip fillpath grestore
  } bind def

%******************************************************************************
% Draw Polygon Solid
%    x y dps
%
/dps  {
    closepath
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse
    fill grestore
    0 color ne { setLineColor } if stroke
  } bind def

%******************************************************************************
% Draw Polygon Vertex
%    x y dpv
%
/dpv  {
    bblineto
  } bind def

%******************************************************************************
% Draw Circle Unfilled
%    x y radius dcu
%
/dcu  {
    /radius exch def
    /y exch def
    /x exch def

    newpath
    x y radius radius 0 360 ellipse
    gsave
    0 color ne { setLineColor } if
    stroke
    grestore
  } bind def
%******************************************************************************
% Draw Circle Filled
%    x y radius dcs
%
/dcf  {
    /radius exch def
    /y exch def
    /x exch def
    /minx x radius sub def
    /miny y radius sub def
    /maxx x radius add def
    /maxy y radius add def

    newpath
    x y radius radius 0 360 ellipse
    gsave
    0 color ne { setFillColor } if
    clip fillpath
    grestore
  } bind def

%******************************************************************************
% Draw Circle Solid
%    x y radius dcs
%
/dcs  {
    /radius exch def
    /y exch def
    /x exch def

          newpath
    x y radius radius 0 360 ellipse
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse
    fill grestore
    0 color ne {setLineColor} if stroke
  } bind def
%******************************************************************************
% Draw Ellipse Unfilled
%    x y xradius yradius deu
%
/delu  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    newpath
    x y xradius yradius 0 360 ellipse
    gsave
    0 color ne { setLineColor } if
    stroke
    grestore
  } bind def
%******************************************************************************
% Draw Ellipse Filled
%    x y xradius yradius def
%
/delf  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def
    /minx x xradius sub def
    /miny y yradius sub def
    /maxx x xradius add def
    /maxy y yradius add def

    newpath
    x y xradius yradius 0 360 ellipse
    gsave
    0 color ne { setFillColor } if
    clip fillpath
    grestore
  } bind def

%******************************************************************************
% Draw Ellipse Solid
%    x y xradius yradius des
%
/dels  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    newpath
    x y xradius yradius 0 360 ellipse
    gsave
    0 color ne { setFillColor }
               { 0 setgray } ifelse

    fill grestore
    0 color ne {setLineColor} if stroke
  } bind def
%******************************************************************************
% Draw Arc Unfilled
%    x y xradius yradius startangle endangle das
%
/dau  { newpath ellipse
        gsave
        0 color ne { setLineColor } if
        stroke
        grestore
      } bind def
%******************************************************************************
% Line Define Code.
%
/setlinedash {
    1 index length 11 gt
    {exch dup length 11 sub 11 getinterval exch } if
    setdash
  } bind def

/lpb    {
    pop
    [
    /offset 0 def
    /offcount 0 def
    /oncount 0 def
  } bind def

/lpon  {
    /oncount exch def
    pop
    oncount
  } bind def

/lpoff  {
    /offcount exch def
    pop
    oncount 0 eq
    {/offset offcount def }
    { offcount } ifelse
  } bind def

/lpe  {
    /linewidth exch def
    pop
    offset 0 ne
    { offset } if ] 0 setlinedash
    linewidth dup 1 eq {pop 0} if setlinewidth
  } bind def

/sls    { pop } bind def

/ssls  { [] 0 setdash
          1 setlinewidth
        } bind def

%******************************************************************************
% Fill pattern define code.
%
/fillpath  {
    0 color ne { setFillColor } if
    /str 1 string def
    /minx minx 66 div
    truncate 66 mul def
    /miny miny 66 div
    truncate 66 mul def

          /fillLine maxx minx sub cvi 66 idiv 1 add string def

          0 1 fillLine length 1 sub {
            fillLine exch fillChar str cvs cvi 48 add put
          } for

          minx
          miny 66 maxy
            { exch dup 3 -1 roll moveto fillLine show
          } for pop

    hatchSet 1 eq {0 color ne { setLineColor } if stroke} if
} bind def


/fds  { pop /currchar 30 def} bind def
/fdf   {
    exch
    /char exch def
    /stipple stippleArray char get def
    stipple exch currchar
    exch putinterval
    stippleArray char stipple put
    /currchar currchar 2 sub def
  } bind def
/fde  {
    pop
  } bind def
/sfp  {
    /fillChar exch def
    /hatchSet 0 def
    fillChar 8 ge {/hatchSet 1 def} if
    /StippleFont findfont 66 scalefont setfont
  } bind def
/setLineColor {
  lineRed    1000 div
  lineGreen  1000 div
  lineBlue   1000 div
  setrgbcolor
} bind def

/setFillColor {
  fillRed    1000 div
  fillGreen  1000 div
  fillBlue   1000 div
  setrgbcolor
} bind def

/slc {
  /lineBlue  exch def
  /lineGreen exch def
  /lineRed   exch def
  /color 1 def
  lineBlue 1000 eq {lineGreen 1000 eq {lineRed 1000 eq {
    /lineBlue  0 def
    /lineGreen 0 def
    /lineRed   0 def
  } if} if} if
} bind def

/sfc {
  /fillBlue  exch def
  /fillGreen exch def
  /fillRed   exch def
  /color 1 def
  fillBlue 1000 eq {fillGreen 1000 eq {fillRed 1000 eq {
    /fillBlue  0 def
    /fillGreen 0 def
    /fillRed   0 def
  } if} if} if
} bind def
%******************************************************************************
%
% End of Cadence ps.prologue
%
%******************************************************************************
/setpacking where
{
	pop currpack setpacking
} if
%%EndProlog
/#copies 1 def
0 0 2550 3300 300 pap
nxp
%%Page: cds 1
rotp
0 0 3299 2511 clwin
0 0 3299 2512 clwin
0 0 3299 2513 clwin
ssls
1000 502 0 slc
1000 502 0 sfc
2887 1298 dlt
-2 2 dlv
-3 1 dlv
-3 0 dlv
-2 -1 dlv
-3 -2 dlv
-1 -4 dlv
0 -2 dlv
1 -3 dlv
3 -2 dlv
2 -2 dlv
3 0 dlv
3 2 dlv
2 2 dlv
dle
20 0 2895 1299 dls
20 0 2895 1292 dls
2940 1303 dlt
-1 3 dlv
-3 2 dlv
-2 1 dlv
-4 0 dlv
-3 -1 dlv
-2 -2 dlv
-1 -3 dlv
-1 -3 dlv
0 -6 dlv
1 -3 dlv
1 -2 dlv
2 -2 dlv
3 -2 dlv
4 0 dlv
2 2 dlv
3 2 dlv
1 2 dlv
dle
0 -24 2948 1309 dls
2961 1301 dlt
-2 -1 dlv
-2 -2 dlv
-2 -4 dlv
0 -2 dlv
2 -3 dlv
2 -2 dlv
2 -2 dlv
3 0 dlv
3 2 dlv
2 2 dlv
1 3 dlv
0 2 dlv
-1 4 dlv
-2 2 dlv
-3 1 dlv
-3 0 dlv
dle
0 -16 2990 1301 dls
2990 1298 dlt
-2 2 dlv
-2 1 dlv
-4 0 dlv
-2 -1 dlv
-2 -2 dlv
-1 -4 dlv
0 -2 dlv
1 -3 dlv
2 -2 dlv
2 -2 dlv
4 0 dlv
2 2 dlv
2 2 dlv
dle
0 -24 3012 1309 dls
3012 1298 dlt
-2 2 dlv
-3 1 dlv
-3 0 dlv
-2 -1 dlv
-3 -2 dlv
-1 -4 dlv
0 -2 dlv
1 -3 dlv
3 -2 dlv
2 -2 dlv
3 0 dlv
3 2 dlv
2 2 dlv
dle
1497 1298 dlt
-2 2 dlv
-2 1 dlv
-3 0 dlv
-3 -1 dlv
-2 -2 dlv
-1 -4 dlv
0 -2 dlv
1 -3 dlv
2 -2 dlv
3 -2 dlv
3 0 dlv
2 2 dlv
2 2 dlv
dle
21 0 1505 1299 dls
21 0 1505 1292 dls
1550 1303 dlt
-1 3 dlv
-2 2 dlv
-2 1 dlv
-5 0 dlv
-2 -1 dlv
-2 -2 dlv
-1 -3 dlv
-2 -3 dlv
0 -6 dlv
2 -3 dlv
1 -2 dlv
2 -2 dlv
2 -2 dlv
5 0 dlv
2 2 dlv
2 2 dlv
1 2 dlv
dle
0 -24 1558 1309 dls
1572 1301 dlt
-3 -1 dlv
-2 -2 dlv
-1 -4 dlv
0 -2 dlv
1 -3 dlv
2 -2 dlv
3 -2 dlv
3 0 dlv
2 2 dlv
3 2 dlv
1 3 dlv
0 2 dlv
-1 4 dlv
-3 2 dlv
-2 1 dlv
-3 0 dlv
dle
0 -16 1601 1301 dls
1601 1298 dlt
-2 2 dlv
-3 1 dlv
-3 0 dlv
-2 -1 dlv
-2 -2 dlv
-2 -4 dlv
0 -2 dlv
2 -3 dlv
2 -2 dlv
2 -2 dlv
3 0 dlv
3 2 dlv
2 2 dlv
dle
0 -24 1622 1309 dls
1622 1298 dlt
-2 2 dlv
-2 1 dlv
-3 0 dlv
-3 -1 dlv
-2 -2 dlv
-1 -4 dlv
0 -2 dlv
1 -3 dlv
2 -2 dlv
3 -2 dlv
3 0 dlv
2 2 dlv
2 2 dlv
dle
2577 1833 dlt
6 -16 dlv
7 16 dlv
dle
0 -24 2609 1841 dls
2609 1830 dlt
-2 2 dlv
-2 1 dlv
-4 0 dlv
-2 -1 dlv
-2 -2 dlv
-1 -3 dlv
0 -3 dlv
1 -3 dlv
2 -2 dlv
2 -2 dlv
4 0 dlv
2 2 dlv
2 2 dlv
dle
2631 1830 dlt
-3 2 dlv
-2 1 dlv
-3 0 dlv
-3 -1 dlv
-2 -2 dlv
-1 -3 dlv
0 -3 dlv
1 -3 dlv
2 -2 dlv
3 -2 dlv
3 0 dlv
2 2 dlv
3 2 dlv
dle
21 0 2638 1831 dls
21 0 2638 1824 dls
2670 1837 dlt
2 1 dlv
4 3 dlv
0 -24 dlv
dle
2688 1820 dlt
-1 -1 dlv
1 -2 dlv
1 2 dlv
-1 1 dlv
dle
2703 1841 dlt
-4 -1 dlv
-1 -2 dlv
0 -2 dlv
1 -3 dlv
3 -1 dlv
4 -1 dlv
3 -1 dlv
3 -2 dlv
1 -3 dlv
0 -3 dlv
-1 -2 dlv
-1 -1 dlv
-4 -2 dlv
-4 0 dlv
-4 2 dlv
-1 1 dlv
-1 2 dlv
0 3 dlv
1 3 dlv
2 2 dlv
4 1 dlv
4 1 dlv
3 1 dlv
1 3 dlv
0 2 dlv
-1 2 dlv
-4 1 dlv
-4 0 dlv
dle
1158 1833 dlt
6 -16 dlv
7 16 dlv
dle
0 -24 1190 1841 dls
1190 1830 dlt
-2 2 dlv
-2 1 dlv
-4 0 dlv
-2 -1 dlv
-2 -2 dlv
-1 -3 dlv
0 -3 dlv
1 -3 dlv
2 -2 dlv
2 -2 dlv
4 0 dlv
2 2 dlv
2 2 dlv
dle
1212 1830 dlt
-3 2 dlv
-2 1 dlv
-3 0 dlv
-2 -1 dlv
-3 -2 dlv
-1 -3 dlv
0 -3 dlv
1 -3 dlv
3 -2 dlv
2 -2 dlv
3 0 dlv
2 2 dlv
3 2 dlv
dle
20 0 1220 1831 dls
20 0 1220 1824 dls
1251 1837 dlt
2 1 dlv
4 3 dlv
0 -24 dlv
dle
1269 1820 dlt
-1 -1 dlv
1 -2 dlv
1 2 dlv
-1 1 dlv
dle
1284 1841 dlt
-4 -1 dlv
-1 -2 dlv
0 -2 dlv
1 -3 dlv
3 -1 dlv
4 -1 dlv
3 -1 dlv
3 -2 dlv
1 -3 dlv
0 -3 dlv
-1 -2 dlv
-1 -1 dlv
-4 -2 dlv
-4 0 dlv
-4 2 dlv
-1 1 dlv
-1 2 dlv
0 3 dlv
1 3 dlv
2 2 dlv
4 1 dlv
4 1 dlv
3 1 dlv
1 3 dlv
0 2 dlv
-1 2 dlv
-4 1 dlv
-4 0 dlv
dle
389 1257 dlt
7 -16 dlv
7 16 dlv
dle
409 1259 dlt
0 1 dlv
1 2 dlv
2 2 dlv
2 1 dlv
4 0 dlv
3 -1 dlv
1 -2 dlv
1 -2 dlv
0 -2 dlv
-1 -2 dlv
-3 -4 dlv
-11 -11 dlv
16 0 dlv
dle
20 0 432 1255 dls
20 0 432 1248 dls
463 1260 dlt
3 1 dlv
3 4 dlv
0 -24 dlv
dle
481 1243 dlt
-1 -1 dlv
1 -1 dlv
1 1 dlv
-1 1 dlv
dle
496 1265 dlt
-3 -1 dlv
-2 -3 dlv
0 -2 dlv
2 -2 dlv
2 -1 dlv
4 -1 dlv
4 -2 dlv
2 -2 dlv
1 -2 dlv
0 -3 dlv
-1 -3 dlv
-1 -1 dlv
-4 -1 dlv
-4 0 dlv
-3 1 dlv
-2 1 dlv
-1 3 dlv
0 3 dlv
1 2 dlv
3 2 dlv
3 2 dlv
5 1 dlv
2 1 dlv
1 2 dlv
0 2 dlv
-1 3 dlv
-4 1 dlv
-4 0 dlv
dle
389 1301 dlt
7 -16 dlv
7 16 dlv
dle
412 1305 dlt
2 1 dlv
3 3 dlv
0 -24 dlv
dle
430 1301 dlt
-2 -1 dlv
2 -1 dlv
1 1 dlv
-1 1 dlv
dle
430 1288 dlt
-2 -1 dlv
2 -2 dlv
1 2 dlv
-1 1 dlv
dle
445 1309 dlt
-3 -1 dlv
-2 -3 dlv
-1 -6 dlv
0 -3 dlv
1 -6 dlv
2 -3 dlv
3 -2 dlv
3 0 dlv
3 2 dlv
2 3 dlv
1 6 dlv
0 3 dlv
-1 6 dlv
-2 3 dlv
-3 1 dlv
-3 0 dlv
dle
-15 -24 454 1309 dls
392 1220 dlt
0 -19 dlv
2 -3 dlv
2 -1 dlv
2 0 dlv
dle
8 0 389 1212 dls
0 -15 405 1212 dls
405 1206 dlt
1 3 dlv
2 2 dlv
2 1 dlv
4 0 dlv
dle
21 0 419 1210 dls
21 0 419 1203 dls
461 1220 dlt
-11 0 dlv
-1 -10 dlv
1 1 dlv
3 1 dlv
4 0 dlv
3 -1 dlv
2 -2 dlv
1 -3 dlv
0 -3 dlv
-1 -3 dlv
-2 -2 dlv
-3 -1 dlv
-4 0 dlv
-3 1 dlv
-1 1 dlv
-1 2 dlv
dle
0 -23 471 1212 dls
471 1209 dlt
2 2 dlv
3 1 dlv
3 0 dlv
2 -1 dlv
3 -2 dlv
1 -3 dlv
0 -3 dlv
-1 -3 dlv
-3 -2 dlv
-2 -1 dlv
-3 0 dlv
-3 1 dlv
-2 2 dlv
dle
1000 0 0 slc
1000 0 0 sfc
2875 1348 dlt
-1 2 dlv
-2 2 dlv
-2 1 dlv
-5 0 dlv
-2 -1 dlv
-2 -2 dlv
-1 -2 dlv
-2 -4 dlv
0 -5 dlv
2 -4 dlv
1 -2 dlv
2 -2 dlv
2 -1 dlv
5 0 dlv
2 1 dlv
2 2 dlv
1 2 dlv
dle
2885 1349 dlt
3 1 dlv
3 3 dlv
0 -23 dlv
dle
1486 1348 dlt
-1 2 dlv
-2 2 dlv
-3 1 dlv
-4 0 dlv
-2 -1 dlv
-3 -2 dlv
-1 -2 dlv
-1 -4 dlv
0 -5 dlv
1 -4 dlv
1 -2 dlv
3 -2 dlv
2 -1 dlv
4 0 dlv
3 1 dlv
2 2 dlv
1 2 dlv
dle
1500 1353 dlt
-4 -1 dlv
-2 -3 dlv
-1 -6 dlv
0 -3 dlv
1 -6 dlv
2 -3 dlv
4 -1 dlv
2 0 dlv
3 1 dlv
2 3 dlv
2 6 dlv
0 3 dlv
-2 6 dlv
-2 3 dlv
-3 1 dlv
-2 0 dlv
dle
-16 -23 1509 1353 dls
2546 1885 dlt
9 -23 dlv
9 23 dlv
dle
2569 1880 dlt
0 1 dlv
2 2 dlv
1 1 dlv
2 1 dlv
4 0 dlv
3 -1 dlv
1 -1 dlv
1 -2 dlv
0 -2 dlv
-1 -3 dlv
-2 -3 dlv
-12 -11 dlv
16 0 dlv
dle
1127 1885 dlt
9 -23 dlv
9 23 dlv
dle
1153 1881 dlt
2 1 dlv
3 3 dlv
0 -23 dlv
dle
373 1353 dlt
9 -23 dlv
9 23 dlv
dle
402 1353 dlt
-3 -1 dlv
-2 -3 dlv
-1 -6 dlv
0 -3 dlv
1 -6 dlv
2 -3 dlv
3 -1 dlv
3 0 dlv
3 1 dlv
2 3 dlv
1 6 dlv
0 3 dlv
-1 6 dlv
-2 3 dlv
-3 1 dlv
-3 0 dlv
dle
-15 -23 411 1353 dls
6 0 2355 1522 dls
0 -30 2358 1522 dls
6 0 2355 1492 dls
2372 1516 dlt
3 2 dlv
4 4 dlv
0 -30 dlv
dle
6 0 966 1522 dls
0 -30 969 1522 dls
6 0 966 1492 dls
980 1515 dlt
0 1 dlv
1 3 dlv
2 1 dlv
3 2 dlv
5 0 dlv
3 -2 dlv
2 -1 dlv
1 -3 dlv
0 -3 dlv
-1 -2 dlv
-3 -5 dlv
-14 -14 dlv
19 0 dlv
dle
1000 1000 1000 slc
1000 1000 1000 sfc
1406 526 dlt
0 29 dlv
20 -29 dlv
0 29 dlv
dle
1443 545 dlt
-3 -1 dlv
-3 -3 dlv
-1 -4 dlv
0 -3 dlv
1 -4 dlv
3 -3 dlv
3 -1 dlv
4 0 dlv
3 1 dlv
3 3 dlv
1 4 dlv
0 3 dlv
-1 4 dlv
-3 3 dlv
-3 1 dlv
-4 0 dlv
dle
1461 545 dlt
9 -19 dlv
8 19 dlv
dle
1534 550 dlt
3 1 dlv
4 4 dlv
0 -29 dlv
dle
1578 548 dlt
0 2 dlv
1 2 dlv
2 2 dlv
3 1 dlv
5 0 dlv
3 -1 dlv
2 -2 dlv
1 -2 dlv
0 -3 dlv
-1 -3 dlv
-3 -4 dlv
-14 -14 dlv
19 0 dlv
dle
1606 548 dlt
0 2 dlv
2 2 dlv
1 2 dlv
3 1 dlv
5 0 dlv
3 -1 dlv
2 -2 dlv
1 -2 dlv
0 -3 dlv
-1 -3 dlv
-3 -4 dlv
-14 -14 dlv
20 0 dlv
dle
1636 545 dlt
-2 -1 dlv
2 -1 dlv
1 1 dlv
-1 1 dlv
dle
1636 528 dlt
-2 -1 dlv
2 -1 dlv
1 1 dlv
-1 1 dlv
dle
1650 555 dlt
15 0 dlv
-8 -11 dlv
4 0 dlv
3 -1 dlv
1 -2 dlv
2 -4 dlv
0 -3 dlv
-2 -4 dlv
-2 -3 dlv
-5 -1 dlv
-4 0 dlv
-4 1 dlv
-2 1 dlv
-1 3 dlv
dle
1677 548 dlt
0 2 dlv
1 2 dlv
1 2 dlv
3 1 dlv
6 0 dlv
3 -1 dlv
1 -2 dlv
1 -2 dlv
0 -3 dlv
-1 -3 dlv
-3 -4 dlv
-14 -14 dlv
20 0 dlv
dle
1706 545 dlt
-1 -1 dlv
1 -1 dlv
2 1 dlv
-2 1 dlv
dle
1706 528 dlt
-1 -1 dlv
1 -1 dlv
2 1 dlv
-2 1 dlv
dle
1734 555 dlt
-14 0 dlv
-1 -12 dlv
1 1 dlv
4 1 dlv
5 0 dlv
4 -1 dlv
3 -3 dlv
1 -4 dlv
0 -3 dlv
-1 -4 dlv
-3 -3 dlv
-4 -1 dlv
-5 0 dlv
-4 1 dlv
-1 1 dlv
-2 3 dlv
dle
1750 550 dlt
3 1 dlv
4 4 dlv
0 -29 dlv
dle
1793 548 dlt
0 2 dlv
2 2 dlv
1 2 dlv
3 1 dlv
6 0 dlv
3 -1 dlv
1 -2 dlv
1 -2 dlv
0 -3 dlv
-1 -3 dlv
-3 -4 dlv
-14 -14 dlv
20 0 dlv
dle
1829 555 dlt
-5 -1 dlv
-2 -4 dlv
-2 -7 dlv
0 -5 dlv
2 -7 dlv
2 -4 dlv
5 -1 dlv
2 0 dlv
5 1 dlv
2 4 dlv
2 7 dlv
0 5 dlv
-2 7 dlv
-2 4 dlv
-5 1 dlv
-2 0 dlv
dle
-20 -29 1840 555 dls
1850 548 dlt
0 2 dlv
1 2 dlv
2 2 dlv
2 1 dlv
6 0 dlv
3 -1 dlv
1 -2 dlv
2 -2 dlv
0 -3 dlv
-2 -3 dlv
-3 -4 dlv
-14 -14 dlv
20 0 dlv
dle
1885 555 dlt
-4 -1 dlv
-3 -4 dlv
-2 -7 dlv
0 -5 dlv
2 -7 dlv
3 -4 dlv
4 -1 dlv
3 0 dlv
4 1 dlv
3 4 dlv
1 7 dlv
0 5 dlv
-1 7 dlv
-3 4 dlv
-4 1 dlv
-3 0 dlv
dle
-20 -29 1896 555 dls
1646 2305 dlt
11 0 dlv
-11 -17 dlv
11 0 dlv
dle
1668 2305 dlt
-2 -1 dlv
-2 -1 dlv
-1 -2 dlv
0 -3 dlv
0 -4 dlv
0 -2 dlv
1 -2 dlv
2 -2 dlv
2 0 dlv
3 0 dlv
2 0 dlv
1 2 dlv
1 2 dlv
1 2 dlv
0 4 dlv
-1 3 dlv
-1 2 dlv
-1 1 dlv
-2 1 dlv
-3 0 dlv
dle
1682 2288 dlt
0 17 dlv
12 -17 dlv
0 17 dlv
dle
1712 2305 dlt
-11 0 dlv
0 -17 dlv
11 0 dlv
dle
6 0 1701 2297 dls
1785 2288 dlt
0 17 dlv
8 0 dlv
3 -1 dlv
1 -2 dlv
0 -2 dlv
-1 -2 dlv
-3 -1 dlv
-8 0 dlv
dle
6 -9 1791 2297 dls
1814 2305 dlt
-11 0 dlv
0 -17 dlv
11 0 dlv
dle
7 0 1803 2297 dls
1817 2305 dlt
6 -17 dlv
7 17 dlv
dle
2187 2288 dlt
0 17 dlv
6 0 dlv
3 -1 dlv
2 -1 dlv
0 -2 dlv
1 -3 dlv
0 -4 dlv
-1 -2 dlv
0 -2 dlv
-2 -2 dlv
-3 0 dlv
-6 0 dlv
dle
2216 2305 dlt
-11 0 dlv
0 -17 dlv
11 0 dlv
dle
7 0 2205 2297 dls
2232 2303 dlt
-1 1 dlv
-3 1 dlv
-3 0 dlv
-3 -1 dlv
-2 -1 dlv
0 -2 dlv
1 -2 dlv
1 -1 dlv
2 0 dlv
5 -2 dlv
2 -1 dlv
0 -1 dlv
1 -1 dlv
0 -3 dlv
-1 -2 dlv
-3 0 dlv
-3 0 dlv
-3 0 dlv
-2 2 dlv
dle
2250 2301 dlt
-1 2 dlv
-2 1 dlv
-1 1 dlv
-4 0 dlv
-1 -1 dlv
-2 -1 dlv
-1 -2 dlv
-1 -3 dlv
0 -4 dlv
1 -2 dlv
1 -2 dlv
2 -2 dlv
1 0 dlv
4 0 dlv
1 0 dlv
2 2 dlv
1 2 dlv
dle
2256 2288 dlt
0 17 dlv
7 0 dlv
3 -1 dlv
1 0 dlv
1 -2 dlv
0 -2 dlv
-1 -2 dlv
-1 0 dlv
-3 -1 dlv
-7 0 dlv
dle
6 -9 2262 2297 dls
3 0 2272 2305 dls
0 -17 2274 2305 dls
3 0 2272 2288 dls
2280 2288 dlt
0 17 dlv
8 0 dlv
2 -1 dlv
1 0 dlv
1 -2 dlv
0 -3 dlv
-1 -1 dlv
-1 -1 dlv
-2 -1 dlv
-8 0 dlv
dle
0 -17 2301 2305 dls
11 0 2296 2305 dls
3 0 2310 2305 dls
0 -17 2312 2305 dls
3 0 2310 2288 dls
2323 2305 dlt
-2 -1 dlv
-2 -1 dlv
-1 -2 dlv
-1 -3 dlv
0 -4 dlv
1 -2 dlv
1 -2 dlv
2 -2 dlv
2 0 dlv
3 0 dlv
2 0 dlv
1 2 dlv
1 2 dlv
1 2 dlv
0 4 dlv
-1 3 dlv
-1 2 dlv
-1 1 dlv
-2 1 dlv
-3 0 dlv
dle
2337 2288 dlt
0 17 dlv
12 -17 dlv
0 17 dlv
dle
2353 2361 dlt
0 18 dlv
8 0 dlv
2 -1 dlv
1 -1 dlv
1 -1 dlv
0 -2 dlv
-1 -2 dlv
-1 0 dlv
-2 -1 dlv
-8 0 dlv
dle
6 -10 2359 2371 dls
2382 2379 dlt
-11 0 dlv
0 -18 dlv
11 0 dlv
dle
6 0 2371 2371 dls
2384 2379 dlt
7 -18 dlv
7 18 dlv
dle
4 0 2400 2379 dls
0 -18 2402 2379 dls
4 0 2400 2361 dls
2420 2377 dlt
-2 1 dlv
-3 1 dlv
-3 0 dlv
-2 -1 dlv
-2 -1 dlv
0 -2 dlv
1 -2 dlv
1 -1 dlv
1 0 dlv
5 -2 dlv
2 -1 dlv
1 -1 dlv
1 -2 dlv
0 -2 dlv
-2 -2 dlv
-3 -1 dlv
-3 0 dlv
-2 1 dlv
-2 2 dlv
dle
3 0 2424 2379 dls
0 -18 2426 2379 dls
3 0 2424 2361 dls
2437 2379 dlt
-2 -1 dlv
-2 -1 dlv
-1 -2 dlv
0 -3 dlv
0 -4 dlv
0 -2 dlv
1 -2 dlv
2 -2 dlv
2 -1 dlv
3 0 dlv
2 1 dlv
1 2 dlv
1 2 dlv
1 2 dlv
0 4 dlv
-1 3 dlv
-1 2 dlv
-1 1 dlv
-2 1 dlv
-3 0 dlv
dle
2451 2361 dlt
0 18 dlv
12 -18 dlv
0 18 dlv
dle
2481 2377 dlt
-2 1 dlv
-3 1 dlv
-3 0 dlv
-3 -1 dlv
-1 -1 dlv
0 -2 dlv
1 -2 dlv
0 -1 dlv
2 0 dlv
5 -2 dlv
2 -1 dlv
1 -1 dlv
1 -2 dlv
0 -2 dlv
-2 -2 dlv
-3 -1 dlv
-3 0 dlv
-3 1 dlv
-1 2 dlv
dle
3016 2288 dlt
6 17 dlv
7 -17 dlv
dle
9 0 3018 2293 dls
3034 2288 dlt
0 17 dlv
8 0 dlv
2 -1 dlv
1 0 dlv
1 -2 dlv
0 -3 dlv
-1 -1 dlv
-1 -1 dlv
-2 -1 dlv
-8 0 dlv
dle
3052 2288 dlt
0 17 dlv
7 0 dlv
3 -1 dlv
1 0 dlv
1 -2 dlv
0 -3 dlv
-1 -1 dlv
-1 -1 dlv
-3 -1 dlv
-7 0 dlv
dle
3070 2288 dlt
0 17 dlv
7 0 dlv
3 -1 dlv
1 0 dlv
0 -2 dlv
0 -2 dlv
0 -2 dlv
-1 0 dlv
-3 -1 dlv
-7 0 dlv
dle
5 -9 3076 2297 dls
3092 2305 dlt
-2 -1 dlv
-2 -1 dlv
-1 -2 dlv
0 -3 dlv
0 -4 dlv
0 -2 dlv
1 -2 dlv
2 -2 dlv
2 0 dlv
3 0 dlv
2 0 dlv
1 2 dlv
1 2 dlv
1 2 dlv
0 4 dlv
-1 3 dlv
-1 2 dlv
-1 1 dlv
-2 1 dlv
-3 0 dlv
dle
3103 2305 dlt
7 -17 dlv
7 17 dlv
dle
3132 2305 dlt
-11 0 dlv
0 -17 dlv
11 0 dlv
dle
7 0 3121 2297 dls
3137 2288 dlt
0 17 dlv
6 0 dlv
3 -1 dlv
1 -1 dlv
1 -2 dlv
1 -3 dlv
0 -4 dlv
-1 -2 dlv
-1 -2 dlv
-1 -2 dlv
-3 0 dlv
-6 0 dlv
dle
2776 2288 dlt
0 17 dlv
6 0 dlv
2 -1 dlv
2 -1 dlv
1 -2 dlv
1 -3 dlv
0 -4 dlv
-1 -2 dlv
-1 -2 dlv
-2 -2 dlv
-2 0 dlv
-6 0 dlv
dle
2791 2288 dlt
7 17 dlv
6 -17 dlv
dle
9 0 2793 2293 dls
0 -17 2813 2305 dls
12 0 2807 2305 dls
2834 2305 dlt
-11 0 dlv
0 -17 dlv
11 0 dlv
dle
7 0 2823 2297 dls
2538 2462 dlt
-17 0 dlv
-2 -15 dlv
2 1 dlv
5 2 dlv
5 0 dlv
5 -2 dlv
3 -3 dlv
2 -5 dlv
0 -3 dlv
-2 -5 dlv
-3 -4 dlv
-5 -2 dlv
-5 0 dlv
-5 2 dlv
-2 2 dlv
-2 3 dlv
dle
2561 2462 dlt
-5 -2 dlv
-3 -5 dlv
-2 -8 dlv
0 -5 dlv
2 -9 dlv
3 -5 dlv
5 -2 dlv
4 0 dlv
5 2 dlv
3 5 dlv
2 9 dlv
0 5 dlv
-2 8 dlv
-3 5 dlv
-5 2 dlv
-4 0 dlv
dle
-24 -36 2575 2462 dls
2595 2462 dlt
-5 -2 dlv
-3 -5 dlv
-2 -8 dlv
0 -5 dlv
2 -9 dlv
3 -5 dlv
5 -2 dlv
3 0 dlv
5 2 dlv
4 5 dlv
1 9 dlv
0 5 dlv
-1 8 dlv
-4 5 dlv
-5 2 dlv
-3 0 dlv
dle
-23 -36 2608 2462 dls
2619 2462 dlt
23 0 dlv
-17 -36 dlv
dle
2652 2462 dlt
24 0 dlv
-17 -36 dlv
dle
2691 2455 dlt
4 2 dlv
5 5 dlv
0 -36 dlv
dle
2718 2462 dlt
19 0 dlv
-10 -14 dlv
5 0 dlv
3 -1 dlv
2 -2 dlv
2 -5 dlv
0 -3 dlv
-2 -5 dlv
-4 -4 dlv
-5 -2 dlv
-5 0 dlv
-5 2 dlv
-1 2 dlv
-2 3 dlv
dle
2771 2457 dlt
-2 3 dlv
-5 2 dlv
-4 0 dlv
-5 -2 dlv
-3 -5 dlv
-2 -8 dlv
0 -9 dlv
2 -6 dlv
3 -4 dlv
5 -2 dlv
2 0 dlv
5 2 dlv
4 4 dlv
1 5 dlv
0 1 dlv
-1 5 dlv
-4 4 dlv
-5 1 dlv
-2 0 dlv
-5 -1 dlv
-3 -4 dlv
-2 -5 dlv
dle
2786 2462 dlt
18 0 dlv
-10 -14 dlv
5 0 dlv
4 -1 dlv
1 -2 dlv
2 -5 dlv
0 -3 dlv
-2 -5 dlv
-3 -4 dlv
-5 -2 dlv
-5 0 dlv
-5 2 dlv
-2 2 dlv
-2 3 dlv
dle
2426 2450 dlt
0 15 dlv
5 0 dlv
2 -1 dlv
2 -1 dlv
0 -2 dlv
1 -2 dlv
0 -3 dlv
-1 -2 dlv
0 -2 dlv
-2 -1 dlv
-2 -1 dlv
-5 0 dlv
dle
2440 2465 dlt
3 -15 dlv
4 15 dlv
3 -15 dlv
4 15 dlv
dle
2468 2461 dlt
-1 2 dlv
-1 1 dlv
-2 1 dlv
-2 0 dlv
-2 -1 dlv
-1 -1 dlv
-1 -2 dlv
-1 -2 dlv
0 -3 dlv
1 -2 dlv
1 -2 dlv
1 -1 dlv
2 -1 dlv
2 0 dlv
2 1 dlv
1 1 dlv
1 2 dlv
0 2 dlv
-4 0 dlv
dle
2484 2450 dlt
0 15 dlv
10 -15 dlv
0 15 dlv
dle
2503 2465 dlt
-1 -1 dlv
-2 -1 dlv
0 -2 dlv
-1 -2 dlv
0 -3 dlv
1 -2 dlv
0 -2 dlv
2 -1 dlv
1 -1 dlv
3 0 dlv
1 1 dlv
2 1 dlv
0 2 dlv
1 2 dlv
0 3 dlv
-1 2 dlv
0 2 dlv
-2 1 dlv
-1 1 dlv
-3 0 dlv
dle
2516 2452 dlt
-1 -1 dlv
1 -1 dlv
0 1 dlv
0 1 dlv
dle
3030 2463 dlt
-2 1 dlv
-2 1 dlv
-3 0 dlv
-2 -1 dlv
-1 -1 dlv
0 -2 dlv
0 -1 dlv
1 -1 dlv
2 0 dlv
4 -2 dlv
1 -1 dlv
1 0 dlv
1 -2 dlv
0 -2 dlv
-2 -1 dlv
-2 -1 dlv
-3 0 dlv
-2 1 dlv
-1 1 dlv
dle
0 -15 3035 2465 dls
0 -15 3044 2465 dls
9 0 3035 2458 dls
3127 2450 dlt
0 15 dlv
6 0 dlv
2 -1 dlv
1 -1 dlv
1 -1 dlv
0 -1 dlv
-1 -2 dlv
-1 0 dlv
-2 -1 dlv
-6 0 dlv
dle
5 -8 3132 2458 dls
3151 2465 dlt
-9 0 dlv
0 -15 dlv
9 0 dlv
dle
5 0 3142 2458 dls
3153 2465 dlt
6 -15 dlv
5 15 dlv
dle
2424 269 dlt
0 17 dlv
6 0 dlv
2 -1 dlv
2 -1 dlv
1 -2 dlv
1 -3 dlv
0 -4 dlv
-1 -2 dlv
-1 -2 dlv
-2 -2 dlv
-2 0 dlv
-6 0 dlv
dle
2440 286 dlt
4 -17 dlv
4 17 dlv
5 -17 dlv
4 17 dlv
dle
2474 282 dlt
-1 2 dlv
-2 1 dlv
-1 1 dlv
-4 0 dlv
-2 -1 dlv
-1 -1 dlv
-1 -2 dlv
-1 -3 dlv
0 -4 dlv
1 -2 dlv
1 -2 dlv
1 -2 dlv
2 0 dlv
4 0 dlv
1 0 dlv
2 2 dlv
1 2 dlv
0 2 dlv
-4 0 dlv
dle
2493 269 dlt
0 17 dlv
12 -17 dlv
0 17 dlv
dle
2516 286 dlt
-2 -1 dlv
-1 -1 dlv
-1 -2 dlv
-1 -3 dlv
0 -4 dlv
1 -2 dlv
1 -2 dlv
1 -2 dlv
2 0 dlv
3 0 dlv
2 0 dlv
2 2 dlv
1 2 dlv
0 2 dlv
0 4 dlv
0 3 dlv
-1 2 dlv
-2 1 dlv
-2 1 dlv
-3 0 dlv
dle
2531 270 dlt
-1 -1 dlv
1 0 dlv
1 0 dlv
-1 1 dlv
dle
1398 605 dlt
0 -12 dlv
1 -3 dlv
2 -1 dlv
2 -1 dlv
2 0 dlv
2 1 dlv
2 1 dlv
1 3 dlv
0 12 dlv
dle
1417 588 dlt
0 17 dlv
7 0 dlv
3 0 dlv
1 -1 dlv
1 -2 dlv
0 -2 dlv
-1 -2 dlv
-1 -1 dlv
-3 -1 dlv
-7 0 dlv
dle
1434 588 dlt
0 17 dlv
6 0 dlv
3 0 dlv
2 -2 dlv
0 -2 dlv
1 -2 dlv
0 -4 dlv
-1 -3 dlv
0 -2 dlv
-2 -1 dlv
-3 -1 dlv
-6 0 dlv
dle
1450 588 dlt
6 17 dlv
7 -17 dlv
dle
9 0 1452 594 dls
0 -17 1472 605 dls
12 0 1466 605 dls
1493 605 dlt
-11 0 dlv
0 -17 dlv
11 0 dlv
dle
7 0 1482 597 dls
1498 588 dlt
0 17 dlv
6 0 dlv
2 0 dlv
2 -2 dlv
1 -2 dlv
1 -2 dlv
0 -4 dlv
-1 -3 dlv
-1 -2 dlv
-2 -1 dlv
-2 -1 dlv
-6 0 dlv
dle
2739 154 dlt
-1 1 dlv
-3 1 dlv
-3 0 dlv
-3 -1 dlv
-1 -1 dlv
0 -2 dlv
0 -2 dlv
1 -1 dlv
2 0 dlv
5 -2 dlv
2 -1 dlv
1 -1 dlv
0 -1 dlv
0 -3 dlv
-1 -2 dlv
-3 -1 dlv
-3 0 dlv
-3 1 dlv
-1 2 dlv
dle
0 -18 2745 156 dls
0 -18 2757 156 dls
12 0 2745 148 dls
2775 156 dlt
-11 0 dlv
0 -18 dlv
11 0 dlv
dle
7 0 2764 148 dls
2791 156 dlt
-11 0 dlv
0 -18 dlv
11 0 dlv
dle
7 0 2780 148 dls
0 -18 2799 156 dls
12 0 2793 156 dls
2009 284 dlt
-1 1 dlv
-3 1 dlv
-3 0 dlv
-3 -1 dlv
-2 -1 dlv
0 -2 dlv
1 -2 dlv
1 -1 dlv
2 0 dlv
5 -2 dlv
2 -1 dlv
0 -1 dlv
1 -1 dlv
0 -3 dlv
-1 -2 dlv
-3 0 dlv
-3 0 dlv
-3 0 dlv
-2 2 dlv
dle
4 0 2013 286 dls
0 -17 2015 286 dls
4 0 2013 269 dls
2021 286 dlt
12 0 dlv
-12 -17 dlv
12 0 dlv
dle
2050 286 dlt
-11 0 dlv
0 -17 dlv
11 0 dlv
dle
7 0 2039 278 dls
4 0 1396 186 dls
0 -18 1398 186 dls
4 0 1396 168 dls
1416 183 dlt
-2 2 dlv
-2 1 dlv
-4 0 dlv
-2 -1 dlv
-2 -2 dlv
0 -1 dlv
1 -2 dlv
1 -1 dlv
1 -1 dlv
6 -2 dlv
1 0 dlv
1 -1 dlv
1 -2 dlv
0 -2 dlv
-2 -2 dlv
-2 -1 dlv
-4 0 dlv
-2 1 dlv
-2 2 dlv
dle
1433 183 dlt
-2 2 dlv
-2 1 dlv
-4 0 dlv
-2 -1 dlv
-2 -2 dlv
0 -1 dlv
1 -2 dlv
1 -1 dlv
1 -1 dlv
5 -2 dlv
2 0 dlv
1 -1 dlv
1 -2 dlv
0 -2 dlv
-2 -2 dlv
-2 -1 dlv
-4 0 dlv
-2 1 dlv
-2 2 dlv
dle
1439 186 dlt
0 -13 dlv
1 -2 dlv
1 -2 dlv
3 -1 dlv
1 0 dlv
3 1 dlv
2 2 dlv
1 2 dlv
0 13 dlv
dle
1468 186 dlt
-11 0 dlv
0 -18 dlv
11 0 dlv
dle
7 0 1457 177 dls
1473 168 dlt
0 18 dlv
6 0 dlv
3 -1 dlv
1 -2 dlv
1 -1 dlv
1 -3 dlv
0 -4 dlv
-1 -3 dlv
-1 -1 dlv
-1 -2 dlv
-3 -1 dlv
-6 0 dlv
dle
2011 198 dlt
14 35 dlv
13 -35 dlv
dle
17 0 2016 209 dls
1410 279 dlt
-1 2 dlv
-2 1 dlv
-1 1 dlv
-4 0 dlv
-1 -1 dlv
-2 -1 dlv
-1 -2 dlv
-1 -2 dlv
0 -5 dlv
1 -2 dlv
1 -2 dlv
2 -2 dlv
1 0 dlv
4 0 dlv
1 0 dlv
2 2 dlv
1 2 dlv
dle
0 -17 1416 283 dls
0 -17 1428 283 dls
12 0 1416 275 dls
1445 283 dlt
-11 0 dlv
0 -17 dlv
11 0 dlv
dle
7 0 1434 275 dls
1462 279 dlt
-1 2 dlv
-1 1 dlv
-2 1 dlv
-3 0 dlv
-2 -1 dlv
-2 -1 dlv
0 -2 dlv
-1 -2 dlv
0 -5 dlv
1 -2 dlv
0 -2 dlv
2 -2 dlv
2 0 dlv
3 0 dlv
2 0 dlv
1 2 dlv
1 2 dlv
dle
0 -17 1468 283 dls
-12 -12 1480 283 dls
8 -10 1472 276 dls
1497 283 dlt
-11 0 dlv
0 -17 dlv
11 0 dlv
dle
7 0 1486 275 dls
1502 266 dlt
0 17 dlv
6 0 dlv
2 -1 dlv
2 -1 dlv
1 -2 dlv
1 -2 dlv
0 -5 dlv
-1 -2 dlv
-1 -2 dlv
-2 -2 dlv
-2 0 dlv
-6 0 dlv
dle
1994 154 dlt
-1 1 dlv
-3 1 dlv
-3 0 dlv
-3 -1 dlv
-1 -1 dlv
0 -2 dlv
0 -2 dlv
1 -1 dlv
2 0 dlv
5 -2 dlv
2 -1 dlv
1 -1 dlv
0 -1 dlv
0 -3 dlv
-1 -2 dlv
-3 -1 dlv
-3 0 dlv
-3 1 dlv
-1 2 dlv
dle
2012 152 dlt
-1 2 dlv
-1 1 dlv
-2 1 dlv
-3 0 dlv
-2 -1 dlv
-2 -1 dlv
-1 -2 dlv
0 -3 dlv
0 -4 dlv
0 -2 dlv
1 -2 dlv
2 -2 dlv
2 -1 dlv
3 0 dlv
2 1 dlv
1 2 dlv
1 2 dlv
dle
2016 138 dlt
6 18 dlv
7 -18 dlv
dle
9 0 2018 144 dls
2034 156 dlt
0 -18 dlv
10 0 dlv
dle
2059 156 dlt
-11 0 dlv
0 -18 dlv
11 0 dlv
dle
7 0 2048 148 dls
3127 269 dlt
0 17 dlv
8 0 dlv
3 -1 dlv
1 -2 dlv
0 -2 dlv
-1 -2 dlv
-3 -1 dlv
-8 0 dlv
dle
6 -9 3133 278 dls
3156 286 dlt
-11 0 dlv
0 -17 dlv
11 0 dlv
dle
7 0 3145 278 dls
3159 286 dlt
6 -17 dlv
7 17 dlv
dle
2114 282 dlt
-1 2 dlv
-2 1 dlv
-2 1 dlv
-3 0 dlv
-2 -1 dlv
-1 -1 dlv
-1 -2 dlv
-1 -3 dlv
0 -4 dlv
1 -2 dlv
1 -2 dlv
1 -2 dlv
2 0 dlv
3 0 dlv
2 0 dlv
2 2 dlv
1 2 dlv
dle
2117 269 dlt
7 17 dlv
6 -17 dlv
dle
9 0 2119 274 dls
2147 282 dlt
-1 2 dlv
-1 1 dlv
-2 1 dlv
-3 0 dlv
-2 -1 dlv
-2 -1 dlv
-1 -2 dlv
0 -3 dlv
0 -4 dlv
0 -2 dlv
1 -2 dlv
2 -2 dlv
2 0 dlv
3 0 dlv
2 0 dlv
1 2 dlv
1 2 dlv
0 2 dlv
-4 0 dlv
dle
2164 286 dlt
-11 0 dlv
0 -17 dlv
11 0 dlv
dle
7 0 2153 278 dls
2183 269 dlt
0 17 dlv
12 -17 dlv
0 17 dlv
dle
2206 286 dlt
-2 -1 dlv
-2 -1 dlv
-1 -2 dlv
0 -3 dlv
0 -4 dlv
0 -2 dlv
1 -2 dlv
2 -2 dlv
2 0 dlv
3 0 dlv
2 0 dlv
1 2 dlv
1 2 dlv
1 2 dlv
0 4 dlv
-1 3 dlv
-1 2 dlv
-1 1 dlv
-2 1 dlv
-3 0 dlv
dle
2221 270 dlt
-1 -1 dlv
1 0 dlv
1 0 dlv
-1 1 dlv
dle
3005 156 dlt
-2 -1 dlv
-2 -1 dlv
-1 -2 dlv
0 -3 dlv
0 -4 dlv
0 -2 dlv
1 -2 dlv
2 -2 dlv
2 -1 dlv
3 0 dlv
2 1 dlv
1 2 dlv
1 2 dlv
1 2 dlv
0 4 dlv
-1 3 dlv
-1 2 dlv
-1 1 dlv
-2 1 dlv
-3 0 dlv
dle
3019 138 dlt
0 18 dlv
11 0 dlv
dle
7 0 3019 148 dls
2119 588 dlt
27 -71 dlv
27 71 dlv
dle
0 -47 2228 564 dls
2228 554 dlt
-7 7 dlv
-7 3 dlv
-10 0 dlv
-7 -3 dlv
-7 -7 dlv
-3 -10 dlv
0 -7 dlv
3 -10 dlv
7 -7 dlv
7 -3 dlv
10 0 dlv
7 3 dlv
7 7 dlv
dle
2258 588 dlt
0 -58 dlv
3 -10 dlv
7 -3 dlv
7 0 dlv
dle
23 0 2248 564 dls
2329 554 dlt
-3 7 dlv
-11 3 dlv
-10 0 dlv
-10 -3 dlv
-3 -7 dlv
3 -7 dlv
7 -3 dlv
17 -4 dlv
7 -3 dlv
3 -7 dlv
0 -3 dlv
-3 -7 dlv
-11 -3 dlv
-10 0 dlv
-10 3 dlv
-3 7 dlv
dle
0 -47 2390 564 dls
2390 554 dlt
-7 7 dlv
-7 3 dlv
-10 0 dlv
-7 -3 dlv
-6 -7 dlv
-4 -10 dlv
0 -7 dlv
4 -10 dlv
6 -7 dlv
7 -3 dlv
10 0 dlv
7 3 dlv
7 7 dlv
dle
0 -71 2417 588 dls
2542 578 dlt
-7 6 dlv
-10 4 dlv
-14 0 dlv
-10 -4 dlv
-7 -6 dlv
0 -7 dlv
4 -7 dlv
3 -3 dlv
7 -4 dlv
20 -6 dlv
7 -4 dlv
3 -3 dlv
4 -7 dlv
0 -10 dlv
-7 -7 dlv
-10 -3 dlv
-14 0 dlv
-10 3 dlv
-7 7 dlv
dle
0 -71 2565 588 dls
2565 551 dlt
11 10 dlv
6 3 dlv
10 0 dlv
7 -3 dlv
4 -10 dlv
0 -34 dlv
dle
0 -47 2630 564 dls
2630 544 dlt
3 10 dlv
7 7 dlv
6 3 dlv
11 0 dlv
dle
2670 544 dlt
41 0 dlv
0 7 dlv
-4 6 dlv
-3 4 dlv
-7 3 dlv
-10 0 dlv
-7 -3 dlv
-7 -7 dlv
-3 -10 dlv
0 -7 dlv
3 -10 dlv
7 -7 dlv
7 -3 dlv
10 0 dlv
7 3 dlv
7 7 dlv
dle
2731 544 dlt
40 0 dlv
0 7 dlv
-3 6 dlv
-3 4 dlv
-7 3 dlv
-10 0 dlv
-7 -3 dlv
-7 -7 dlv
-3 -10 dlv
0 -7 dlv
3 -10 dlv
7 -7 dlv
7 -3 dlv
10 0 dlv
7 3 dlv
6 7 dlv
dle
0 -71 2795 588 dls
-34 -34 2829 564 dls
23 -27 2809 544 dls
0 -47 2890 564 dls
2890 554 dlt
-7 7 dlv
-7 3 dlv
-10 0 dlv
-7 -3 dlv
-6 -7 dlv
-4 -10 dlv
0 -7 dlv
4 -10 dlv
6 -7 dlv
7 -3 dlv
10 0 dlv
7 3 dlv
7 7 dlv
dle
0 -47 2917 564 dls
2917 551 dlt
10 10 dlv
7 3 dlv
10 0 dlv
7 -3 dlv
3 -10 dlv
0 -34 dlv
dle
2984 588 dlt
0 -58 dlv
4 -10 dlv
6 -3 dlv
7 0 dlv
dle
24 0 2974 564 dls
1398 449 dlt
0 18 dlv
6 0 dlv
3 -1 dlv
1 -2 dlv
1 -2 dlv
1 -2 dlv
0 -4 dlv
-1 -3 dlv
-1 -2 dlv
-1 -1 dlv
-3 -1 dlv
-6 0 dlv
dle
1416 449 dlt
0 18 dlv
7 0 dlv
3 -1 dlv
1 -1 dlv
1 -2 dlv
0 -2 dlv
-1 -1 dlv
-1 -1 dlv
-3 -1 dlv
-7 0 dlv
dle
6 -9 1422 458 dls
1431 449 dlt
7 18 dlv
7 -18 dlv
dle
8 0 1434 455 dls
1448 467 dlt
4 -18 dlv
4 18 dlv
5 -18 dlv
4 18 dlv
dle
1470 449 dlt
0 18 dlv
12 -18 dlv
0 18 dlv
dle
1410 374 dlt
-1 1 dlv
-2 2 dlv
-1 1 dlv
-4 0 dlv
-1 -1 dlv
-2 -2 dlv
-1 -1 dlv
-1 -3 dlv
0 -4 dlv
1 -3 dlv
1 -1 dlv
2 -2 dlv
1 -1 dlv
4 0 dlv
1 1 dlv
2 2 dlv
1 1 dlv
dle
0 -18 1416 378 dls
0 -18 1428 378 dls
12 0 1416 369 dls
1445 378 dlt
-11 0 dlv
0 -18 dlv
11 0 dlv
dle
7 0 1434 369 dls
1462 374 dlt
-1 1 dlv
-1 2 dlv
-2 1 dlv
-3 0 dlv
-2 -1 dlv
-2 -2 dlv
0 -1 dlv
-1 -3 dlv
0 -4 dlv
1 -3 dlv
0 -1 dlv
2 -2 dlv
2 -1 dlv
3 0 dlv
2 1 dlv
1 2 dlv
1 1 dlv
dle
0 -18 1468 378 dls
-12 -12 1480 378 dls
8 -10 1472 370 dls
1497 378 dlt
-11 0 dlv
0 -18 dlv
11 0 dlv
dle
7 0 1486 369 dls
1502 360 dlt
0 18 dlv
6 0 dlv
2 -1 dlv
2 -2 dlv
1 -1 dlv
1 -3 dlv
0 -4 dlv
-1 -3 dlv
-1 -1 dlv
-2 -2 dlv
-2 -1 dlv
-6 0 dlv
dle
2578 266 dlt
-34 0 dlv
-4 -31 dlv
4 4 dlv
10 3 dlv
10 0 dlv
10 -3 dlv
7 -7 dlv
3 -10 dlv
0 -7 dlv
-3 -10 dlv
-7 -7 dlv
-10 -3 dlv
-10 0 dlv
-10 3 dlv
-4 3 dlv
-3 7 dlv
dle
2625 266 dlt
-10 -4 dlv
-7 -10 dlv
-3 -17 dlv
0 -10 dlv
3 -17 dlv
7 -10 dlv
10 -3 dlv
7 0 dlv
10 3 dlv
7 10 dlv
3 17 dlv
0 10 dlv
-3 17 dlv
-7 10 dlv
-10 4 dlv
-7 0 dlv
dle
-47 -71 2652 266 dls
2693 266 dlt
-11 -4 dlv
-6 -10 dlv
-4 -17 dlv
0 -10 dlv
4 -17 dlv
6 -10 dlv
11 -3 dlv
6 0 dlv
10 3 dlv
7 10 dlv
4 17 dlv
0 10 dlv
-4 17 dlv
-7 10 dlv
-10 4 dlv
-6 0 dlv
dle
-48 -71 2720 266 dls
2740 266 dlt
47 0 dlv
-34 -71 dlv
dle
2807 266 dlt
48 0 dlv
-34 -71 dlv
dle
2885 252 dlt
7 3 dlv
10 11 dlv
0 -71 dlv
dle
2939 266 dlt
37 0 dlv
-20 -27 dlv
10 0 dlv
7 -4 dlv
3 -3 dlv
4 -10 dlv
0 -7 dlv
-4 -10 dlv
-6 -7 dlv
-11 -3 dlv
-10 0 dlv
-10 3 dlv
-3 3 dlv
-4 7 dlv
dle
3044 255 dlt
-4 7 dlv
-10 4 dlv
-6 0 dlv
-11 -4 dlv
-6 -10 dlv
-4 -17 dlv
0 -17 dlv
4 -13 dlv
6 -7 dlv
11 -3 dlv
3 0 dlv
10 3 dlv
7 7 dlv
3 10 dlv
0 3 dlv
-3 10 dlv
-7 7 dlv
-10 4 dlv
-3 0 dlv
-11 -4 dlv
-6 -7 dlv
-4 -10 dlv
dle
3074 266 dlt
37 0 dlv
-20 -27 dlv
10 0 dlv
7 -4 dlv
3 -3 dlv
4 -10 dlv
0 -7 dlv
-4 -10 dlv
-6 -7 dlv
-10 -3 dlv
-11 0 dlv
-10 3 dlv
-3 3 dlv
-3 7 dlv
dle
1000 902 749 slc
1000 902 749 sfc
47 0 dlt
3252 0 dlv
0 2512 dlv
-3252 0 dlv
0 -2512 dlv
dle
3269 1250 dpb
3233 1256 dpv
3269 1262 dpv
dpu
112 106 dpb
3233 106 dpv
3233 2409 dpv
115 2409 dpv
115 112 dpv
121 112 dpv
121 2403 dpv
3228 2403 dpv
3228 112 dpv
112 112 dpv
dpu
112 109 dlt
3119 0 dlv
0 2297 dlv
-3113 0 dlv
0 -2294 dlv
dle
0 30 1673 2453 dls
29 0 62 1256 dls
30 0 3254 1256 dls
1682 2468 dpb
1673 2409 dpv
1664 2468 dpv
dpu
1664 44 dpb
1673 103 dpv
1682 44 dpv
dpu
76 1262 dpb
112 1256 dpv
76 1250 dpv
dpu
0 30 1673 29 dls
1605 2184 dlt
0 222 dlv
1626 0 dlv
0 -222 dlv
dle
1626 0 1605 2258 dls
0 148 1865 2184 dls
0 148 1752 2184 dls
0 148 2935 2184 dls
0 148 2675 2184 dls
1626 0 1605 2332 dls
0 74 2415 2406 dls
0 74 3006 2406 dls
0 74 3118 2406 dls
2415 2403 dpb
3233 2403 dpv
3233 2483 dpv
2190 2483 dpv
2190 2403 dpv
2415 2403 dpv
2415 2409 dpv
2196 2409 dpv
2196 2477 dpv
3228 2477 dpv
3228 2409 dpv
2415 2409 dpv
dpu
2415 2406 dlt
816 0 dlv
0 74 dlv
-1038 0 dlv
0 -74 dlv
222 0 dlv
dle
1974 109 dpb
1974 626 dpv
1968 626 dpv
1968 109 dpv
dpu
0 517 1971 109 dls
1380 203 dlt
591 0 dlv
0 92 dlv
-591 0 dlv
0 95 dlv
591 0 dlv
0 91 dlv
-591 0 dlv
dle
1257 0 1971 478 dls
0 74 2710 109 dls
0 112 3115 183 dls
0 112 2084 183 dls
1257 0 1971 183 dls
0 74 2267 109 dls
1383 103 dpb
1383 623 dpv
3225 623 dpv
3225 112 dpv
1386 112 dpv
1386 106 dpv
3231 106 dpv
3231 629 dpv
1377 629 dpv
1377 103 dpv
dpu
1380 103 dlt
0 523 dlv
1848 0 dlv
0 -517 dlv
-1842 0 dlv
dle
1257 0 1971 295 dls
0 112 2415 183 dls
0 800 400 slc
0 800 400 sfc
2264 709 dpb
2323 709 dpv
2293 679 dpv
dpu
0 89 2293 709 dls
2500 1566 dpb
2559 1566 dpv
2530 1537 dpv
dpu
0 89 2530 1566 dls
1081 1566 dpb
1141 1566 dpv
1111 1537 dpv
dpu
0 89 1111 1566 dls
875 709 dpb
934 709 dpv
904 679 dpv
dpu
0 89 904 709 dls
59 0 2796 1294 dls
0 65 2826 1294 dls
0 95 2826 1182 dls
2825 1235 41 41 44 135 dau
59 0 1407 1294 dls
0 65 1436 1294 dls
0 95 1436 1182 dls
1436 1235 41 41 44 135 dau
0 17 2530 1809 dls
2529 1802 32 29 delu
18 0 2521 1817 dls
0 59 2530 1832 dls
0 59 2530 1714 dls
18 0 2521 1788 dls
0 17 1111 1809 dls
1111 1802 33 29 delu
18 0 1102 1817 dls
0 59 1111 1832 dls
0 59 1111 1714 dls
18 0 1102 1788 dls
0 17 342 1277 dls
342 1270 32 29 delu
17 0 334 1256 dls
0 59 342 1300 dls
0 59 342 1182 dls
251 1262 dlt
9 0 dlv
0 17 dlv
11 0 dlv
0 -17 dlv
12 0 dlv
0 17 dlv
12 0 dlv
0 -17 dlv
9 0 dlv
dle
17 0 334 1285 dls
118 0 1850 1359 dls
178 0 2559 1359 dls
0 326 2293 945 dls
0 266 2264 1448 dls
2500 1359 59 dcu
1968 1596 dlt
0 -532 dlv
473 295 dlv
-473 237 dlv
dle
118 0 461 1359 dls
177 0 1170 1359 dls
0 326 904 945 dls
0 266 875 1448 dls
1111 1359 59 dcu
579 1596 dlt
0 -532 dlv
473 295 dlv
-473 237 dlv
dle
0 1000 1000 slc
0 1000 1000 sfc
533 0 2293 945 dls
0 237 2826 945 dls
89 0 2737 1359 dls
0 59 2530 1655 dls
0 89 2530 1891 dls
266 0 2264 1980 dls
0 266 2264 1714 dls
0 147 2293 798 dls
532 0 904 798 dls
0 384 1436 798 dls
89 0 1347 1359 dls
0 59 1111 1655 dls
0 89 1111 1891 dls
236 0 875 1980 dls
0 266 875 1714 dls
562 0 342 798 dls
0 384 342 798 dls
0 147 904 798 dls
119 0 342 1359 dls
1000 0 0 slc
1000 0 0 sfc
2212 1018 dlt
-3 -1 dlv
-3 -3 dlv
-1 -3 dlv
0 -6 dlv
1 -2 dlv
3 -3 dlv
3 -2 dlv
4 -1 dlv
7 0 dlv
4 1 dlv
3 2 dlv
3 3 dlv
1 2 dlv
0 6 dlv
-1 3 dlv
-3 3 dlv
-3 1 dlv
-4 0 dlv
0 -7 dlv
dle
2234 1028 dlt
-29 0 dlv
29 20 dlv
-29 0 dlv
dle
2234 1059 dlt
-29 0 dlv
0 10 dlv
1 4 dlv
3 3 dlv
3 1 dlv
4 2 dlv
7 0 dlv
4 -2 dlv
3 -1 dlv
3 -3 dlv
1 -4 dlv
0 -10 dlv
dle
2087 1520 dlt
29 12 dlv
-29 11 dlv
dle
2116 1550 dlt
-29 0 dlv
0 10 dlv
1 4 dlv
3 3 dlv
3 1 dlv
4 2 dlv
7 0 dlv
4 -2 dlv
3 -1 dlv
3 -3 dlv
1 -4 dlv
0 -10 dlv
dle
2116 1579 dlt
-29 0 dlv
0 10 dlv
1 5 dlv
3 2 dlv
3 2 dlv
4 1 dlv
7 0 dlv
4 -1 dlv
3 -2 dlv
3 -2 dlv
1 -5 dlv
0 -10 dlv
dle
2691 1315 dlt
11 -14 dlv
0 -16 dlv
dle
-11 -14 2713 1315 dls
1869 1285 dlt
11 30 dlv
12 -30 dlv
dle
14 0 1873 1295 dls
822 1018 dlt
-2 -1 dlv
-3 -3 dlv
-2 -3 dlv
0 -6 dlv
2 -2 dlv
3 -3 dlv
2 -2 dlv
5 -1 dlv
7 0 dlv
4 1 dlv
3 2 dlv
3 3 dlv
1 2 dlv
0 6 dlv
-1 3 dlv
-3 3 dlv
-3 1 dlv
-4 0 dlv
0 -7 dlv
dle
845 1028 dlt
-30 0 dlv
30 20 dlv
-30 0 dlv
dle
845 1059 dlt
-30 0 dlv
0 10 dlv
2 4 dlv
3 3 dlv
2 1 dlv
5 2 dlv
7 0 dlv
4 -2 dlv
3 -1 dlv
3 -3 dlv
1 -4 dlv
0 -10 dlv
dle
697 1520 dlt
30 12 dlv
-30 11 dlv
dle
727 1550 dlt
-30 0 dlv
0 10 dlv
2 4 dlv
2 3 dlv
3 1 dlv
4 2 dlv
7 0 dlv
5 -2 dlv
2 -1 dlv
3 -3 dlv
2 -4 dlv
0 -10 dlv
dle
727 1579 dlt
-30 0 dlv
0 10 dlv
2 5 dlv
2 2 dlv
3 2 dlv
4 1 dlv
7 0 dlv
5 -1 dlv
2 -2 dlv
3 -2 dlv
2 -5 dlv
0 -10 dlv
dle
1302 1315 dlt
11 -14 dlv
0 -16 dlv
dle
-11 -14 1324 1315 dls
480 1285 dlt
11 30 dlv
11 -30 dlv
dle
14 0 484 1295 dls
1000 0 0 slc
1000 0 0 sfc
2282 786 2305 809 dbs
2518 1643 2542 1667 dbs
1099 1643 1123 1667 dbs
892 786 916 809 dbs
2814 1371 dpb
2837 1371 dpv
2837 1347 dpv
2814 1347 dpv
dps
2814 1194 dpb
2837 1194 dpv
2837 1170 dpv
2814 1170 dpv
dps
1424 1371 dpb
1448 1371 dpv
1448 1347 dpv
1424 1347 dpv
dps
1424 1194 dpb
1448 1194 dpv
1448 1170 dpv
1424 1170 dpv
dps
2518 1702 2542 1726 dbs
2518 1880 2542 1903 dbs
1099 1702 1123 1726 dbs
1099 1880 1123 1903 dbs
331 1170 354 1194 dbs
331 1347 354 1371 dbs
2282 934 2305 957 dbs
2252 1702 2276 1726 dbs
2725 1347 2749 1371 dbs
1838 1347 1862 1371 dbs
892 934 916 957 dbs
863 1702 886 1726 dbs
1336 1347 1359 1371 dbs
449 1347 472 1371 dbs
1000 1000 0 slc
1000 1000 0 sfc
24 24 1838 1347 dbu
24 24 1838 1347 dls
24 -24 1838 1371 dls
gfs
%%Trailer
%%EOF
